{"version":3,"sources":["components/Header.js","hooks/user-auth.js","components/Sidebar.js","Screens/AddCategory.js","constants/categoryConstants.js","actions/categoryActions.js","constants/subCategorConstants.js","actions/subCategoryAction.js","constants/postConstants.js","actions/postActions.js","constants/UserConstants.js","actions/userActions.js","components/SmartEditor.jsx","Screens/AddPost.js","Screens/AddSubCategory.js","components/Pagination.js","Screens/AllPost.js","constants/rssConstants.js","actions/rssActions.js","Screens/Dashboard.js","Screens/LoginScreen.js","firebase/index.js","components/EditorToolbar.js","Screens/UpdateScreen.js","Screens/AddRss.js","Screens/AddUserScreen.js","Screens/AllRssScreen.js","Screens/AllUsersScreen.js","Screens/AllCategoryScreen.js","Screens/AllMedia.js","Screens/UpdateUserScreen.js","Screens/UpdateRssScreen.js","Screens/UpdateCategoryScreen.js","Screens/UpdateSubCategoryScreen.js","Screens/AllSubCategoryScreen.js","Screens/AllPostScreenForAuthor.js","Screens/ErrorPage.js","Screens/BackupAndRestore.js","PrivateRoutes.js","All/Main.js","App.js","store.js","reducers/categoryreducers.js","reducers/postReducer.js","reducers/subCategoryReducer.js","reducers/userReducers.js","reducers/rssReducers.js","index.js"],"names":["Header","user","JSON","parse","localStorage","getItem","navigate","useNavigate","logout","a","removeItem","axios","get","withCredentials","data","className","type","src","alt","name","isAdmin","onClick","style","backgroundColor","cursor","authContext","createContext","ProvideAuth","children","auth","useState","setUser","loadingUser","setLoadingUser","getUser","Axios","res","useEffect","signin","username","password","cb","method","email","url","then","catch","err","console","log","useProvideAuth","Provider","value","useAuth","useContext","HomeIcon","props","SvgIcon","d","Sidebar","setAdmin","setUserData","id","to","AddCategory","title","setTitle","text","setText","pageTitle","setPageTitle","pageKeywords","setPageKeywords","addTop","setaddTop","adPostLoad","setadPostLoad","addToMenu","setAddToMenu","blueSection","setBlueSection","isGridSection","setIsGridSection","addToComminSection","setAddToComminSection","isPlainSection","setIsPlainSection","gridWithWizard","setGridWithWizard","isVideoSection","setIsVideoSection","categoryDataSubmit","e","preventDefault","post","class","for","placeholder","onChange","target","rows","htmlFor","height","width","display","checked","disabled","color","loading","size","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","listCategory","dispatch","payload","message","SUB_CATEGORY_LIST_REQUEST","SUB_CATEGORY_LIST_SUCCESS","SUB_CATEGORY_LIST_FAIL","listSubCategory","POST_LIST_REQUEST","POST_LIST_SUCCESS","POST_LIST_FAIL","listpost","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","ALL_USER_REQUEST","ALL_USER_SUCCESS","ALL_USER_FAIL","allUserAction","headers","Accept","credentials","SmartEditor","userInfo","setuserInfo","EditorState","createEmpty","editorState","setEditorState","uploadImageCallBack","file","formdata","FormData","append","secure_url","link","onEditorStateChange","newState","draftToHtml","convertToRaw","getCurrentContent","toolbar","inline","inDropdown","list","code","textAlign","history","image","previewImage","uploadCallback","present","mandatory","Transition","React","forwardRef","ref","Slide","direction","AddPost","Navigate","open","setOpen","afterPostModalOpen","setAfterPostModalOpen","afterPostHandelClose","Input","styled","users","useSelector","state","allUsers","categories","categoryList","subCategories","subCategoryList","mediaImgFromPost","setMediaImgFromPost","video","setVideo","trend","setTrend","popular","setPopular","setImage","imgAlt","setImgAlt","category","setCategory","subCategory","setSubCategory","subCategoryId","setSubCategoryId","isRight","setIsRight","categoryId","setCategoryId","isFetaured","setIsFetaured","isFetauredTop","setIsFetauredTop","disable","setDisable","load","setLoad","subHeading","setSubHeading","setName","_id","set_id","professionalName","setProfessionalName","socialShare","setSocialShare","setpageTitle","pageDescription","setpageDescription","pageKeyWords","setpageKeyWords","pageTags","setpageTags","newPostId","setNewPostId","newPostTitle","setNewPostTitle","isBreaking","setisBreaking","postList","imageHandler","posts","files","useDispatch","postDataSubmit","persist","description","postitle","searchMediaUrl","setsearchMediaUrl","mediaSearch","accept","multiple","Button","variant","component","marginLeft","marginRight","marginBottom","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","marginTop","DialogContent","map","curElem","img","DialogContentText","href","replace","margin","autoFocus","filterCategory","filter","elem","subCategoryName","person","AddSubCategory","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","number","AllPost","hasMore","sethasMore","pageNumber","setpageNumber","sort","setSort","postLoading","setpostLoading","allLoadedPost","setallLoadedPost","adminPostData","deleteHandel","postId","window","alert","delete","catPage","setcatPage","SubcatPage","setSubcatPage","catId","setcatId","subcatId","setsubcatId","categoryHandler","length","subCategoryHandel","loadNextPost","status","loadNextCAtFilterPost","loadNextsubCAtFilterPost","float","date","filteredData","Date","createdAt","toISOString","sortedData","b","dateAInMillis","getTime","dateFilter","author","toDateString","padding","textDecoration","dataLength","next","loader","RSS_LIST_REQUEST","RSS_LIST_SUCCESS","RSS_LIST_FAIL","listRss","ChartJS","register","ArcElement","Tooltip","Legend","Dashboard","rssList","rss","userList","labels","datasets","label","borderColor","borderWidth","LoginScreen","setEmail","userSignin","error","setPassword","submit","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getStorage","CustomUndo","viewBox","points","CustomRedo","undoChange","this","quill","undo","redoChange","redo","Size","Quill","import","whitelist","Font","formats","QuillToolbar","undefined","toolbarId","selected","UpdateScreen","useParams","loadingData","setloadingData","setPost","getDataUpdateAble","scrollTo","top","behavior","postText","isTrending","isPopular","keyWords","tags","patch","EditorToolbar","theme","modules","container","handlers","delay","maxStack","userOnly","AddRss","setUrl","AddUserScreen","avatar","setAvatar","bio","setBio","facebook","setFacebook","twitter","setTwitter","linkedIn","setLinkedIn","AllRssScreen","rssData","isSameOrAfter","require","isSameOrBefore","dayjs","extend","AllUsersScreen","setLenghtUser","userId","setUserId","handleClose","startingDate","setStartingDate","endingDate","setEndingDate","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","fullScreen","curData","isAuthor","element","event","filteredByUserIdLenght","curUserPost","viewPost","AllCategoryScreen","categoryText","AllMedia","UpdateUserScreen","upDateAblePost","socilaLinks","UpdateRssScreen","rssUrl","UpdateCategoryScreen","categoryImg","isblueSection","categoryPageTitle","categoryPageKeyWords","UpdateSubCategoryScreen","subCategoryPageTitle","subCategoryText","subCategoryPageKeyWords","AllSubCategoryScreen","AllPostScreenForAuthor","userData","isSame","ErrorPage","BackupAndRestore","restoreinput","setrestoreinput","databaseFile","setdatabaseFile","restoreLoading","setrestoreLoading","restoreSuccess","setrestoreSuccess","restore","formData","setTimeout","location","reload","downloadLink","setdownloadLink","downloadAble","setdownloadAble","backupLoading","setbackupLoading","backup","path","maxWidth","previousState","Alert","severity","PrivateRoutes","Main","userExpiry","time","now","exact","App","reducer","combineReducers","action","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5aa8de1.chunk.js","sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nfunction Header() {\n  const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n  const navigate = useNavigate();\n  const logout = async () => {\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"userInfoExpiry\");\n    const responsce = await axios.get(\"/api/user/me/logout\", {\n      withCredentials: true,\n    });\n\n    if (responsce.data.logout) {\n      navigate(\"/admin/login\");\n    }\n  };\n\n  return (\n    <>\n      <nav className=\"navbar default-layout col-lg-12 col-12 p-0 fixed-top d-flex align-items-top flex-row\">\n        <div className=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-start\">\n          <div className=\"me-3\">\n            <button\n              className=\"navbar-toggler navbar-toggler align-self-center\"\n              type=\"button\"\n              data-bs-toggle=\"minimize\"\n            >\n              <span className=\"icon-menu\"></span>\n            </button>\n          </div>\n          <div>\n            <a className=\"navbar-brand brand-logo\">\n              <img src=\"./images/logo.svg\" alt=\"logo\" />\n            </a>\n          </div>\n        </div>\n        <div className=\"navbar-menu-wrapper d-flex align-items-top\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item font-weight-semibold d-none d-lg-block ms-0\">\n              <h1 className=\"welcome-text\">\n                <span className=\"text-black fw-bold\">\n                  {user && user.name && user.name ? user.name : \"\"}\n                </span>{\" \"}\n                {user && user.name && user.name.isAdmin === true\n                  ? \"(Admin)\"\n                  : \"\"}{\" \"}\n              </h1>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav ms-auto\">\n            <li className=\"nav-item dropdown d-none d-lg-block\">\n              <p\n                onClick={logout}\n                style={{ backgroundColor: \"#ccc\", cursor: \"pointer\" }}\n                className=\"dropdown-item\"\n              >\n                <i className=\"dropdown-item-icon mdi mdi-power text-primary me-2\"></i>\n                Log out\n              </p>\n            </li>\n          </ul>\n          <button\n            className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\"\n            type=\"button\"\n            data-bs-toggle=\"offcanvas\"\n          >\n            <span className=\"mdi mdi-menu\"></span>\n          </button>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Header;\n","import React, { useState, useContext, createContext, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nconst authContext = createContext();\r\n\r\n// Provider component that wraps your app and makes auth object ...\r\n// ... available to any child component that calls useAuth().\r\nexport function ProvideAuth({ children }) {\r\n    const auth = useProvideAuth();\r\n    return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n\r\n// Hook for child components to get the auth object ...\r\n// ... and re-render when it changes.\r\nexport const useAuth = () => {\r\n    return useContext(authContext);\r\n};\r\n\r\nfunction useProvideAuth() {\r\n    const [user, setUser] = useState(null);\r\n    const [loadingUser, setLoadingUser] = useState(true);\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await Axios.get(`/api/user/me`, {\r\n          withCredentials: true,\r\n        });\r\n        if (res.data) {\r\n            setUser(res.data);\r\n        } else {\r\n            setUser(null);\r\n        }\r\n      } catch (error) {\r\n        \r\n      }\r\n    \r\n        setLoadingUser(false);\r\n    }\r\n    useEffect(() => {\r\n\r\n        getUser()\r\n    }, [])\r\n\r\n    const signin = (username, password, cb) => {\r\n        return Axios({\r\n          method: 'post',\r\n          data: {\r\n            email: username,\r\n            password: password,\r\n          },\r\n          withCredentials: true,\r\n          url: `/user`,\r\n        }).then((res) => {\r\n          if (res.data ) {\r\n        \r\n            Axios.get(`/api/user/me`, {\r\n              withCredentials: true,\r\n            }).then((res) => {\r\n              setUser(res.data);\r\n              cb();\r\n            });\r\n          } else {\r\n\r\n          }\r\n        }\r\n        \r\n      ).catch((err) => {\r\n        console.log(err);\r\n      });;\r\n   \r\n    };\r\n\r\n    // const signout = cb => {\r\n    //     Axios.get(`${process.env.REACT_APP_API_DATA}/user/logout`, {\r\n    //       withCredentials: true,\r\n    //     }).then((res) => {\r\n    //       if (res.data === 'success') {\r\n    //         setUser(null);\r\n    //         cb();\r\n    //       }\r\n    //     });\r\n    // };\r\n\r\n    return {\r\n        user,\r\n        loadingUser,\r\n        signin,\r\n        // signout\r\n    };\r\n}","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport BackupIcon from '@mui/icons-material/Backup';\nimport CategoryIcon from '@mui/icons-material/Category';\nimport DynamicFeedIcon from '@mui/icons-material/DynamicFeed';\nimport RssFeedIcon from '@mui/icons-material/RssFeed';\nimport ClassIcon from '@mui/icons-material/Class';\nimport GroupAdd from '@mui/icons-material/GroupAdd';\nimport Group from '@mui/icons-material/Group';\nimport PermMediaIcon from '@mui/icons-material/PermMedia';\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\nimport AddToPhotosIcon from '@mui/icons-material/AddToPhotos';\nimport LoupeIcon from '@mui/icons-material/Loupe';\nimport PlaylistAddIcon from '@mui/icons-material/PlaylistAdd';\nimport { useAuth } from \"../hooks/user-auth\";\nfunction HomeIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n    </SvgIcon>\n  );\n}\n\nfunction Sidebar() {\n  const [admin, setAdmin] = useState();\nconst auth = useAuth()\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    setAdmin(user && user.isAdmin && user.isAdmin);\n  }, []);\n  const [userData, setUserData] = useState();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUserData(user);\n  }, []);\n\n  return (\n    <>\n      <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n        <ul className=\"nav\">\n          {auth.user && auth.user.isAdmin === true && (\n            <>\n                  <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/admin/all_rss\">\n                  <i className=\"mdi mdi-grid-large menu-icon\"></i>\n                  <span className=\"menu-title\">All rss <RssFeedIcon style={{ 'margin-left': '10px' }}/></span>\n                </Link>\n              </li>\n             <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/admin/addrss\">\n                  <i className=\"mdi mdi-grid-large menu-icon\"></i>\n                  <span className=\"menu-title\">Add Rss <LoupeIcon style={{ 'margin-left': '10px' }}/></span>\n                </Link>\n              </li>\n            </>\n        )\n        }\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/admin/dashboard\">\n              <i className=\"mdi mdi-grid-large menu-icon\"></i>\n              <span className=\"menu-title\">\n                Dashboard <HomeIcon style={{ 'margin-left': '10px' }} />\n              </span>\n            </Link>\n          </li>\n        \n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/admin/addpost\">\n              <i className=\"mdi mdi-grid-large menu-icon\"></i>\n              <span className=\"menu-title\">Add post <ControlPointIcon style={{ 'margin-left': '10px' }}/></span>\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/admin/posts\">\n              <i className=\"mdi mdi-grid-large menu-icon\"></i>\n              <span className=\"menu-title\">All Posts <DynamicFeedIcon style={{ 'margin-left': '10px' }}/></span>\n            </Link>\n          </li>\n\n          {auth.user && auth.user.isAdmin === true && (\n            <>\n  <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/admin/all_media\">\n                  <i className=\"mdi mdi-grid-large menu-icon\"></i>\n                  <span className=\"menu-title\">All Media <PermMediaIcon style={{ 'margin-left': '10px' }}/></span>\n                </Link>\n              </li>\n          \n\n             \n\n            \n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/admin/add_user\">\n                  <i className=\"mdi mdi-grid-large menu-icon\"></i>\n                  <span className=\"menu-title\">Add user <GroupAdd style={{ 'margin-left': '10px' }}/></span>\n                </Link>\n              </li>\n\n          \n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/admin/all_users\">\n                  <i className=\"mdi mdi-grid-large menu-icon\"></i>\n                  <span className=\"menu-title\">All users <Group style={{ 'margin-left': '10px' }}/></span>\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/admin/all_category\">\n                  <i className=\"mdi mdi-grid-large menu-icon\"></i>\n                  <span className=\"menu-title\">All Category <CategoryIcon style={{ 'margin-left': '10px' }}/></span>\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/admin/addcategory\">\n                  <i className=\"mdi mdi-grid-large menu-icon\"></i>\n                  <span className=\"menu-title\"> Add Category <AddToPhotosIcon style={{ 'margin-left': '10px' }}/>\n                  </span>\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/admin/all/sub_category\">\n                  <i className=\"mdi mdi-grid-large menu-icon\"></i>\n                  <span className=\"menu-title\">All Sub Category <ClassIcon style={{ 'margin-left': '10px' }}/></span>\n                </Link>\n              </li>\n            \n              <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/admin/database/backup\">\n              <i className=\"mdi mdi-grid-large menu-icon\"></i>\n              <span className=\"menu-title\">\n                Backup & restore  <BackupIcon style={{ 'margin-left': '10px' }} />\n              </span>\n            </Link>  \n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/admin/sub_category\">\n                  <i className=\"mdi mdi-grid-large menu-icon\"></i>\n                 \n                  <span className=\"menu-title\">Add sub Category <PlaylistAddIcon style={{ 'margin-left': '10px' }}/></span>\n                </Link>\n              </li>\n            </>\n          )}\n        </ul>\n      </nav>\n    </>\n  );\n}\n\nexport default Sidebar;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nfunction AddCategory() {\n  const navigate = useNavigate();\n\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [pageTitle, setPageTitle] = useState('');\n  const [pageKeywords, setPageKeywords] = useState('');\n\n  const [addTop, setaddTop] = useState(false);\n  const [adPostLoad, setadPostLoad] = useState(false);\n\n  const [addToMenu, setAddToMenu] = useState(false);\n  const [blueSection, setBlueSection] = useState();\n  const [isGridSection, setIsGridSection] = useState();\n  const [addToComminSection, setAddToComminSection] = useState();\n  const [isPlainSection, setIsPlainSection] = useState();\n  const [gridWithWizard, setGridWithWizard] = useState();\n  const [isVideoSection, setIsVideoSection] = useState();\n\n  const categoryDataSubmit = async (e) => {\n    e.preventDefault();\n    setadPostLoad(true);\n    const res = await axios.post('/api/category', {\n      title,\n      text,\n\n      addTop,\n      addToMenu,\n      blueSection,\n      isGridSection,\n      addToComminSection,\n      isPlainSection,\n      gridWithWizard,\n      isVideoSection,\n      pageTitle,\n      pageKeywords,\n    });\n    if (res.data === 'success') {\n        setadPostLoad(false);\n      setTitle('');\n      setText('');\n\n      setaddTop(false);\n      setAddToMenu(false);\n      setBlueSection(false);\n      setIsGridSection(false);\n      setAddToComminSection(false);\n      setIsPlainSection(false);\n      setGridWithWizard(false);\n      setIsVideoSection(false);\n      setPageTitle('');\n      setPageKeywords('');\n      navigate('/admin/all_category');\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <div class=\"col-12 grid-margin stretch-card\">\n                    <div class=\"card\">\n                      <div class=\"card-body\">\n                        <h4 class=\"card-title\">Update the category</h4>\n                        <p class=\"card-description\">All catrgory details</p>\n                        <form class=\"forms-sample\">\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              Category\n                            </label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"Title\"\n                              onChange={(e) => setTitle(e.target.value)}\n                              value={title}\n                            />\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              Page title\n                            </label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"enter page title\"\n                              onChange={(e) => setPageTitle(e.target.value)}\n                              value={pageTitle}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              Page keywords\n                            </label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"use comma to type multiple keywords\"\n                              onChange={(e) => setPageKeywords(e.target.value)}\n                              value={pageKeywords}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlTextarea1\">\n                              Page description\n                            </label>\n                            <textarea\n                              class=\"form-control\"\n                              id=\"exampleFormControlTextarea1\"\n                              rows=\"3\"\n                              onChange={(e) => setText(e.target.value)}\n                              value={text}\n                            ></textarea>\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isfetaured\">Add to menu</label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) => setAddToMenu(e.target.checked)}\n                              checked={addToMenu}\n                            />\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isTopfetaured\">\n                              Add to GridSection\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isTopfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) =>\n                                setIsGridSection(e.target.checked)\n                              }\n                              checked={isGridSection}\n                            />\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isTopfetaured\">\n                              Add to add To Common Section\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isTopfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) =>\n                                setAddToComminSection(e.target.checked)\n                              }\n                              checked={addToComminSection}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isTopfetaured\">\n                              Add to Plain Section\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isTopfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) =>\n                                setIsPlainSection(e.target.checked)\n                              }\n                              checked={isPlainSection}\n                            />\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isTopfetaured\">\n                              Add to video Section\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isTopfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) =>\n                                setIsVideoSection(e.target.checked)\n                              }\n                              checked={isVideoSection}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isTopfetaured\">\n                              Add to grid with wizard\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isTopfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) =>\n                                setGridWithWizard(e.target.checked)\n                              }\n                              checked={gridWithWizard}\n                            />\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isRight\">\n                              Is blusection Category?\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isRight\"\n                              type=\"checkbox\"\n                              onChange={(e) => setBlueSection(e.target.checked)}\n                              checked={blueSection}\n                            />\n                          </div>\n                          <button\n                            type=\"submit\"\n                            class=\"btn btn-primary me-2\"\n                            onClick={categoryDataSubmit}\n                            style={{ width: '13%' }}\n                            disabled={adPostLoad}\n                          >\n                            Add\n                          </button>\n                        </form>\n                        <ClipLoader\n                          color=\"skyblue\"\n                          loading={adPostLoad}\n                          size={50}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AddCategory;\n","export const CATEGORY_LIST_REQUEST = \"CATEGORY_LIST_REQUEST\";\nexport const CATEGORY_LIST_SUCCESS = \"CATEGORY_LIST_SUCCESS\";\nexport const CATEGORY_LIST_FAIL = \"CATEGORY_LIST_FAIL\";\n","import axios from \"axios\";\n\n\nimport {\n  CATEGORY_LIST_FAIL,\n  CATEGORY_LIST_REQUEST,\n  CATEGORY_LIST_SUCCESS,\n} from \"../constants/categoryConstants\";\n\nexport const listCategory = () => async (dispatch) => {\n  dispatch({\n    type: CATEGORY_LIST_REQUEST,\n  });\n  try {\n    const { data } = await axios.get(`/api/category`);\n    dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: CATEGORY_LIST_FAIL, payload: error.message });\n  }\n};\n","export const SUB_CATEGORY_LIST_REQUEST = \"SUB_CATEGORY_LIST_REQUEST\";\nexport const SUB_CATEGORY_LIST_SUCCESS = \"SUB_CATEGORY_LIST_SUCCESS\";\nexport const SUB_CATEGORY_LIST_FAIL = \"SUB_CATEGORY_LIST_FAIL\";\n","import Axios from \"axios\";\nimport { SUB_CATEGORY_LIST_FAIL, SUB_CATEGORY_LIST_REQUEST, SUB_CATEGORY_LIST_SUCCESS } from \"../constants/subCategorConstants\";\n\n\nexport const listSubCategory = () => async (dispatch) => {\n  dispatch({\n    type: SUB_CATEGORY_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get(`/api/subCategory`);\n    dispatch({ type: SUB_CATEGORY_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: SUB_CATEGORY_LIST_FAIL, payload: error.message });\n  }\n};\n","export const POST_LIST_REQUEST = \"POST_LIST_REQUEST\";\nexport const POST_LIST_SUCCESS = \"POST_LIST_SUCCESS\";\nexport const POST_LIST_FAIL = \"POST_LIST_FAIL\";\n","import Axios from \"axios\";\nimport {\n  POST_LIST_FAIL,\n  POST_LIST_REQUEST,\n  POST_LIST_SUCCESS,\n} from \"../constants/postConstants\";\n\nexport const listpost = () => async (dispatch) => {\n  dispatch({\n    type: POST_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get(`/api/post`);\n    dispatch({ type: POST_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: POST_LIST_FAIL, payload: error.message });\n  }\n};\n","export const USER_SIGNIN_REQUEST = \"USER_SIGNIN_REQUEST\";\nexport const USER_SIGNIN_SUCCESS = \"USER_SUCCESS\";\nexport const USER_SIGNIN_FAIL = \"USER_SIGNIN_FAIL\";\n\nexport const ALL_USER_REQUEST = \"ALL_USER_REQUEST\";\nexport const ALL_USER_SUCCESS = \"ALL_USER_SUCCESS\";\nexport const ALL_USER_FAIL = \"ALL_USER_FAIL\";\n","import axios from \"axios\";\nimport  Axios  from \"axios\";\nimport { ALL_USER_FAIL, ALL_USER_REQUEST, ALL_USER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS,} from \"../constants/UserConstants\";\n\n\n\n\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post('/user', { email, password });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    const expiry = {time: Date.now()+86400000}\n    localStorage.setItem(\"userInfoExpiry\", JSON.stringify(expiry))\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        // error.response && error.response.data.message\n        //   ?\n           error.response.data.message\n          // : error.message,\n    });\n  }\n};\n\nexport const allUserAction = () => async (dispatch) => {\n  dispatch({\n    type: ALL_USER_REQUEST,\n  });\n  try {\n   \n    const {data} = await axios.get('/api/user', {\n        \n      headers: {\n        Accept:\"appllication/json\",\n        \"Content-Type\":\"appllication/json\"\n      },\n      credentials:\"include\"\n    })\n    // const data = await res.json();\n    dispatch({ type: ALL_USER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: ALL_USER_FAIL, payload: error.message });\n  }\n};\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\n\r\n\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nexport default function SmartEditor({ userInfo, setuserInfo }) {\r\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n  const uploadImageCallBack = async (file) => {\r\n    const formdata = new FormData();\r\n    formdata.append(\"file\", file);\r\n    formdata.append(\"upload_preset\", \"stishio\");\r\n    const res = await axios.post(\r\n      \"https://api.cloudinary.com/v1_1/mahmudakash177/upload\",\r\n      formdata\r\n    );\r\n\r\n    console.log(res.data.secure_url);\r\n    return { data: { link: res.data.secure_url } };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-group\">\r\n        <label>Description</label>\r\n        <Editor\r\n          editorState={editorState}\r\n          onEditorStateChange={(newState) => {\r\n            setEditorState(newState);\r\n            setuserInfo(\r\n              draftToHtml(convertToRaw(newState.getCurrentContent()))\r\n            );\r\n          }}\r\n          toolbar={{\r\n            inline: { inDropdown: false },\r\n            list: { inDropdown: false },\r\n            code: { inDropdown: false },\r\n            textAlign: { inDropdown: false },\r\n            link: { inDropdown: false },\r\n            history: { inDropdown: false },\r\n\r\n            image: {\r\n              previewImage: true,\r\n              uploadCallback: (file) => uploadImageCallBack(file),\r\n              alt: { present: true, mandatory: true },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport { listCategory } from '../actions/categoryActions';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nimport { useNavigate } from 'react-router-dom';\nimport { listSubCategory } from '../actions/subCategoryAction';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\n\nimport 'react-quill/dist/quill.snow.css';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\nimport { listpost } from '../actions/postActions';\nimport { allUserAction } from '../actions/userActions';\nimport SmartEditor from '../components/SmartEditor';\nimport jwt_decode from \"jwt-decode\";\nimport { useAuth } from '../hooks/user-auth';\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nfunction AddPost() {\n  const [userData, setUser] = useState(null);\n  const auth = useAuth();\n\n  useEffect(() => {\n\n    setUser(auth.user)\n\n  }, [auth.user])\n\n\n  const Navigate = useNavigate();\n\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const [afterPostModalOpen, setAfterPostModalOpen] = useState(false);\n\n  const afterPostHandelClose = () => {\n    setAfterPostModalOpen(false);\n  };\n  const [userInfo, setuserInfo] = useState('');\n\n  const ondescription = (value) => {\n    setuserInfo({ ...userInfo, description: value });\n    console.log(userInfo);\n  };\n\n  const Input = styled('input')({\n    display: 'none',\n  });\n  const userList = useSelector((state) => state.allUsers);\n  const { users } = userList;\n  const categoryList = useSelector((state) => state.categoryList);\n  const { categories } = categoryList;\n  const subCategoryList = useSelector((state) => state.subCategoryList);\n  const { subCategories } = subCategoryList;\n\n  const [title, setTitle] = useState('');\n  const [mediaImgFromPost, setMediaImgFromPost] = useState('');\n  const [video, setVideo] = useState();\n  const [text, setText] = useState('');\n  const [trend, setTrend] = useState();\n  const [popular, setPopular] = useState();\n  const [image, setImage] = useState('');\n  const [imgAlt, setImgAlt] = useState('');\n  const [category, setCategory] = useState('');\n  const [subCategory, setSubCategory] = useState('');\n  const [subCategoryId, setSubCategoryId] = useState('');\n  const [isRight, setIsRight] = useState();\n  const [categoryId, setCategoryId] = useState('');\n  const [isFetaured, setIsFetaured] = useState();\n\n  const [isFetauredTop, setIsFetauredTop] = useState();\n  const [disable, setDisable] = useState(true);\n  let [load, setLoad] = useState(false);\n  const [subHeading, setSubHeading] = useState();\n  const [name, setName] = useState('');\n  const [_id, set_id] = useState('');\n  const [professionalName, setProfessionalName] = useState('');\n  const [socialShare, setSocialShare] = useState(false);\n  const [pageTitle, setpageTitle] = useState();\n  const [pageDescription, setpageDescription] = useState();\n  const [pageKeyWords, setpageKeyWords] = useState();\n  const [pageTags, setpageTags] = useState();\n  const [newPostId, setNewPostId] = useState();\n  const [newPostTitle, setNewPostTitle] = useState();\nconst [isBreaking , setisBreaking] = useState(false)\n  const postList = useSelector((state) => state.postList);\n  const { posts, loading } = postList;\n\n  const imageHandler = async (e) => {\n    const file = e.target.files[0];\n\n    setLoad(true);\n    const formdata = new FormData();\n    formdata.append('file', file);\n    formdata.append('upload_preset', 'thehawk');\n    const res = await axios.post(\n      'https://api.cloudinary.com/v1_1/thehawk/upload',\n      formdata\n    );\n\n    setImage(res.data.secure_url);\n    setLoad(false);\n  };\n\n  const setdatFromMedia = (url) => {\n    setImage(url);\n    setOpen(false);\n  };\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n\n    dispatch(listpost());\n\n    dispatch(listCategory());\n\n    dispatch(listSubCategory());\n\n    setName(auth.user.name);\n    set_id(auth.user._id);\n    setProfessionalName(auth.user.professionalName);\n  }, [ auth.user , dispatch]);\n\n  const categoryIdHandel = (e) => {\n    setCategory(e.target.value);\n    setDisable(false);\n    const filterCategory =\n      categories &&\n      categories.filter((curElem) => {\n        return curElem.category === e.target.value;\n      });\n    setCategoryId(filterCategory[0]._id);\n  };\n\n  const userHandel = (e) => {\n    setName(e.target.value);\n\n    const filterCategory =\n      users &&\n      users.filter((curElem) => {\n        return curElem.name === e.target.value;\n      });\n    set_id(filterCategory[0]._id);\n  };\n  const [adPostLoad, setadPostLoad] = useState(false);\n\n  const subCategoryIdHandel = (e) => {\n    setSubCategory(e.target.value);\n    const filterCategory =\n      subCategories &&\n      subCategories.filter((curElem) => {\n        return curElem.subCategoryName === e.target.value;\n      });\n    setSubCategoryId(filterCategory[0]._id);\n  };\n\n  const postDataSubmit = async (e) => {\n    setadPostLoad(true);\n    e.preventDefault();\n    e.persist();\n    const res = await axios.post('/api/post', {\n      title,\n      isBreaking,\n      text,\n      image,\n      category,\n      categoryId,\n      isFetaured,\n      isFetauredTop,\n      subCategory,\n      subCategoryId,\n      isRight,\n      name,\n      _id,\n      trend,\n      popular,\n      description: userInfo,\n      subHeading,\n      socialShare,\n      professionalName,\n      pageTitle,\n      pageDescription,\n      pageKeyWords,\n      pageTags,\n      video,\n      imgAlt,\n    });\n    if (res) {\n      setadPostLoad(false);\n      setNewPostId(res.data._id);\n      setNewPostTitle(res.data.postitle);\n      setAfterPostModalOpen(true);\n\n      setTitle('');\n      setText('');\n      setImage('');\n      setCategory('');\n      setSubCategory('');\n      setSubCategoryId('');\n      setIsRight(false);\n      setCategoryId('');\n      setIsFetaured(false);\nsetisBreaking(false);\n      setIsFetauredTop(false);\n      setDisable(true);\n      setLoad(false);\n      setTrend(false);\n      setPopular(false);\n      setuserInfo('');\n      setSubHeading('');\n      setSocialShare(false);\n      setpageKeyWords('');\n      setpageDescription('');\n      setpageTitle('');\n      setpageTags('');\n      setVideo('');\n      setImgAlt('');\n      Navigate('/admin/addpost');\n    }\n  };\n  const [searchMediaUrl, setsearchMediaUrl] = useState('');\n\n\n  useEffect(() => {\n    dispatch(allUserAction());\n  }, [dispatch]);\n\n  const mediaSearch = async () => {\n    // searchMediaUrl;\n    const { data } = await axios.post(\n      `/api/media/?search=${searchMediaUrl}`,\n      {}\n    );\n    console.log(data);\n    if (data) {\n      setMediaImgFromPost(data);\n    }\n  };\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <div class=\"col-12 grid-margin stretch-card\">\n                    <div class=\"card\">\n                      <div class=\"card-body\">\n                        <h4 class=\"card-title\">Add post</h4>\n                        <p class=\"card-description\">All post details</p>\n                        <form class=\"forms-sample\">\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              Post Title\n                            </label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"Title\"\n                              onChange={(e) => setTitle(e.target.value)}\n                              value={title}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label>Sub Heading</label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"Sub Heading\"\n                              onChange={(e) => setSubHeading(e.target.value)}\n                              value={subHeading}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlTextarea1\">\n                              Post text\n                            </label>\n                            <textarea\n                              class=\"form-control\"\n                              id=\"exampleFormControlTextarea1\"\n                              rows=\"3\"\n                              onChange={(e) => setText(e.target.value)}\n                              value={text}\n                            ></textarea>\n                          </div>\n                          <label className=\"mb-2\">Post full text</label>\n\n                          <SmartEditor userInfo= {userInfo} setuserInfo={setuserInfo} />\n\n                          <div className=\"mb-2 mt-3\">Post Image</div>\n                          {/* <h1>Image uploading {progress}%</h1> */}\n                          <label htmlFor=\"contained-button-file\">\n                            <Input\n                              accept=\"image/*\"\n                              id=\"contained-button-file\"\n                              multiple\n                              type=\"file\"\n                              onChange={imageHandler}\n                            />\n                            <Button\n                              variant=\"contained\"\n                              component=\"span\"\n                              className=\"mb-2\"\n                            >\n                              Upload\n                            </Button>\n                          </label>\n                          <Button\n                            variant=\"contained\"\n                            style={{\n                              width: 'auto',\n                              marginLeft: '20px',\n                              marginRight: '10px',\n                            }}\n                            className=\"mb-2\"\n                            onClick={handleClickOpen}\n                          >\n                            Select from media\n                          </Button>\n                          or Add video url\n                          <br />\n                          <div class=\"form-group\">\n                            <label>Video embeded url</label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"iframe/ youtube video embed link\"\n                              onChange={(e) => setVideo(e.target.value)}\n                              value={video}\n                            />\n                          </div>\n                          <span\n                            style={{ color: '#ef5350', marginBottom: '20px' }}\n                          >\n                            *warning: this data will just working for video\n                            section's posts\n                          </span>\n                          <div class=\"form-group mt-3\">\n                            <label for=\"exampleFormControlFile1\">\n                              Image Alt (if you upload a new image then add\n                              this.)\n                            </label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"img alt\"\n                              onChange={(e) => setImgAlt(e.target.value)}\n                              value={imgAlt}\n                            />\n                          </div>\n                          <div className=\"image_previw\">\n                            <ClipLoader\n                              color=\"skyblue\"\n                              loading={load}\n                              size={50}\n                            />\n\n                            <Dialog\n                              open={open}\n                              TransitionComponent={Transition}\n                              keepMounted\n                              onClose={handleClose}\n                              aria-describedby=\"alert-dialog-slide-description\"\n                            >\n                              <DialogTitle>\n                                <h3>Medias</h3>\n                                <div class=\"form-group\">\n                                  <label>Search</label>\n                                  <input\n                                    class=\"form-control\"\n                                    type=\"text\"\n                                    placeholder=\"Enter Image Alt value to serach a specific image\"\n                                    onChange={(e) =>\n                                      setsearchMediaUrl(e.target.value)\n                                    }\n                                    // value={video}\n                                  />\n\n                                  <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary me-2\"\n                                    onClick={mediaSearch}\n                                    style={{ marginTop: '10px' }}\n                                    // disabled={adPostLoad}\n                                  >\n                                    Search\n                                  </button>\n                                </div>\n                              </DialogTitle>\n                              <DialogContent>\n                                {/* <ClipLoader\n                                  color=\"skyblue\"\n                                  loading={loading}\n                                  size={54}\n                                /> */}\n\n                                {mediaImgFromPost &&\n                                  mediaImgFromPost.map((curElem) => (\n                                    <>\n                                      <img\n                                        onClick={() =>\n                                          setdatFromMedia(curElem.img)\n                                        }\n                                        className=\"m-3\"\n                                        src={curElem.img}\n                                        alt=\"\"\n                                        height=\"100px\"\n                                        width=\"100px\"\n                                      />\n                                    </>\n                                  ))}\n                              </DialogContent>\n                              {/* <DialogActions>\n          <Button onClick={handleClose}>Disagree</Button>\n          <Button onClick={handleClose}>Agree</Button>\n        </DialogActions> */}\n                            </Dialog>\n                            <img\n                              // alt=\"\"\n                              src={image}\n                              style={{\n                                'max-width': '80%',\n                                'max-height': '60%',\n\n                                display: 'block',\n                              }}\n                            />\n                          </div>\n                          <Dialog\n                            className=\"afterPostModal\"\n                            open={afterPostModalOpen}\n                            onClose={afterPostHandelClose}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                          >\n                            <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\n                            <DialogContent>\n                              <DialogContentText\n                                style={{ textAlign: 'center' }}\n                                id=\"alert-dialog-description\"\n                              >\n                                See the previw of your post on live\n                                <a\n                                  href={`/posts/${\n                                    newPostTitle &&\n                                    newPostTitle.replace(/\\s+/g, '-')\n                                  }/${newPostId}`}\n                                  style={{ width: '83%', margin: '16px 57px' }}\n                                  variant=\"outlined\"\n                                  // onClick={afterPostHandelClose}\n                                >\n                                  View\n                                </a>\n                                <Button\n                                  style={{ width: '83%', margin: '16px 57px' }}\n                                  variant=\"outlined\"\n                                  onClick={afterPostHandelClose}\n                                  autoFocus\n                                >\n                                  Create a New post\n                                </Button>\n                              </DialogContentText>\n                            </DialogContent>\n                          </Dialog>\n                          <div class=\"form-group\" style={{ marginTop: '20px' }}>\n                            <label for=\"exampleSelectGender\">Category</label>\n                            <select\n                              class=\"form-control\"\n                              id=\"exampleSelectGender\"\n                              onChange={categoryIdHandel}\n                              value={category}\n                            >\n                              <option>\n                                {!category ? 'Select the post category' : ''}\n                              </option>\n                              {categories &&\n                                categories.map((elem) => (\n                                  <option>{elem.category}</option>\n                                ))}\n                            </select>\n                          </div>\n                          <div class=\"form-group\" style={{ marginTop: '20px' }}>\n                            <label for=\"exampleSelectGender\">\n                              If you want to change the user\n                            </label>\n                            <select\n                              class=\"form-control\"\n                              id=\"exampleSelectGender\"\n                              onChange={userHandel}\n                              value={name}\n                            >\n                              {users &&\n                                users.map((elem) => (\n                                  <option>{elem.name}</option>\n                                ))}\n                            </select>\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleSelectGender\">\n                              Sub Category\n                            </label>\n                            <select\n                              class=\"form-control\"\n                              id=\"exampleSelectGender\"\n                              onChange={subCategoryIdHandel}\n                              disabled={disable}\n                              value={subCategory}\n                            >\n                              <option>\n                                {!subCategory\n                                  ? 'Select the post Sub Category '\n                                  : ''}\n                              </option>\n                              {subCategories &&\n                                subCategories\n                                  .filter(\n                                    (person) => person.categoryId === categoryId\n                                  )\n                                  .map((elem) => (\n                                    <option>{elem.subCategoryName}</option>\n                                  ))}\n                            </select>\n                          </div>\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isfetaured\">\n                              Add as category fetaured post\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) => setIsFetaured(e.target.checked)}\n                              checked={isFetaured}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isTopfetaured\">Add to top</label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isTopfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) =>\n                                setIsFetauredTop(e.target.checked)\n                              }\n                              checked={isFetauredTop}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isRight\">Add to Right Column</label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isRight\"\n                              type=\"checkbox\"\n                              onChange={(e) => setIsRight(e.target.checked)}\n                              checked={isRight}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isRight\">Tending?</label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isRight\"\n                              type=\"checkbox\"\n                              onChange={(e) => setTrend(e.target.checked)}\n                              checked={trend}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isRight\"> DON'T MISS?</label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isRight\"\n                              type=\"checkbox\"\n                              onChange={(e) => setPopular(e.target.checked)}\n                              checked={popular}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isRight\"> is Breaking</label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isRight\"\n                              type=\"checkbox\"\n                              onChange={(e) => setisBreaking(e.target.checked)}\n                              checked={isBreaking}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isRight\">\n                              Social Share Button?\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              type=\"checkbox\"\n                              onChange={(e) => setSocialShare(e.target.checked)}\n                              checked={socialShare}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label>Tags</label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"use comma for write new tags or multiple tags\"\n                              onChange={(e) => setpageTags(e.target.value)}\n                              value={pageTags}\n                            />\n                          </div>\n                          <h5>SEO options</h5>\n                          <div class=\"form-group\">\n                            <label>Page title</label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"Write the page title\"\n                              onChange={(e) => setpageTitle(e.target.value)}\n                              value={pageTitle}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label>Page Description</label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"Write the page description\"\n                              onChange={(e) =>\n                                setpageDescription(e.target.value)\n                              }\n                              value={pageDescription}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label>Keywords</label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"use comma for write new Keywords or multiple Keywords\"\n                              onChange={(e) => setpageKeyWords(e.target.value)}\n                              value={pageKeyWords}\n                            />\n                          </div>\n                          <button\n                            type=\"submit\"\n                            class=\"btn btn-primary me-2\"\n                            onClick={postDataSubmit}\n                            style={{ width: '13%' }}\n                            disabled={adPostLoad}\n                          >\n                            Post\n                          </button>\n                        </form>\n                        <ClipLoader\n                          color=\"skyblue\"\n                          loading={adPostLoad}\n                          size={50}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AddPost;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { styled } from \"@mui/material/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listCategory } from \"../actions/categoryActions\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nfunction AddSubCategory() {\n\n    const navigate = useNavigate();\n\n  const [title, setTitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [pageTitle, setPageTitle] = useState(\"\");\n  const [pageKeywords, setPageKeywords] = useState(\"\");\n  const dispatch = useDispatch();\n  const [adPostLoad, setadPostLoad] = useState(false);\n\n\n  const [categoryId, setCategoryId] = useState(\"\");\n  const categoryList = useSelector((state) => state.categoryList);\n  const { categories } = categoryList;\n  const [category, setCategory] = useState(\"\");\n  const categoryIdHandel = (e) => {\n    setCategory(e.target.value);\n    const filterCategory =\n      categories &&\n      categories.filter((curElem) => {\n        return curElem.category === e.target.value;\n      });\n\n    setCategoryId(filterCategory[0]._id);\n  };\n    useEffect(() => {\n  \n        dispatch(listCategory());\n      \n    }, [dispatch]);\n  const categoryDataSubmit = async (e) => {\n    setadPostLoad(true);\n    e.preventDefault();\n    const res = await axios.post('/api/subCategory', {\n      title,\n      category,\n      categoryId,\n      pageTitle,\n      pageKeywords,\n      text,\n    });\n    if (res.data === \"success\") {\n      setadPostLoad(false);\n      setTitle(\"\");\n      setPageTitle(\"\");\n      setText(\"\");\n      setPageKeywords(\"\");\n      navigate('/admin/sub_category');\n    }\n  };\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <div class=\"col-12 grid-margin stretch-card\">\n                    <div class=\"card\">\n                      <div class=\"card-body\">\n                        <h4 class=\"card-title\">Add Sub category</h4>\n\n                        <form class=\"forms-sample\">\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">Title</label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"Title\"\n                              onChange={(e) => setTitle(e.target.value)}\n                              value={title}\n                            />\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              Page title\n                            </label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"enter page title\"\n                              onChange={(e) => setPageTitle(e.target.value)}\n                              value={pageTitle}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              Page keywords\n                            </label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"use comma to type multiple keywords\"\n                              onChange={(e) => setPageKeywords(e.target.value)}\n                              value={pageKeywords}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlTextarea1\">\n                              Page description\n                            </label>\n                            <textarea\n                              class=\"form-control\"\n                              id=\"exampleFormControlTextarea1\"\n                              rows=\"3\"\n                              onChange={(e) => setText(e.target.value)}\n                              value={text}\n                            ></textarea>\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleSelectGender\">Category</label>\n                            <select\n                              class=\"form-control\"\n                              id=\"exampleSelectGender\"\n                              onChange={categoryIdHandel}\n                            >\n                              <option>\n                                {!category ? 'Select the  category' : ''}\n                                {category && !categoryId\n                                  ? 'Select the  category'\n                                  : ''}\n                              </option>\n                              {categories &&\n                                categories.map((elem) => (\n                                  <option>{elem.category}</option>\n                                ))}\n                            </select>\n                          </div>\n\n                          <button\n                            type=\"submit\"\n                            class=\"btn btn-primary me-2\"\n                            onClick={categoryDataSubmit}\n                            style={{ width: '13%' }}\n                            disabled={adPostLoad}\n                          >\n                            Add\n                          </button>\n                        </form>\n                        <ClipLoader\n                          color=\"skyblue\"\n                          loading={adPostLoad}\n                          size={50}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AddSubCategory;\n","import React from 'react';\n\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='pagination mt-3' >\n        {pageNumbers.map(number => (\n          <li key={number} style={{\"marginRight\":\"10px\"}}>\n            <button onClick={() => paginate(number)}  className='btn btn-primary btn-sm  '  >\n              {number}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { useNavigate } from \"react-router-dom\";\nimport { listpost } from \"../actions/postActions\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Pagination from \"../components/Pagination\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport dayjs from \"dayjs\";\n\nimport { listCategory } from \"../actions/categoryActions\";\nimport { listSubCategory } from \"../actions/subCategoryAction\";\n\nfunction AllPost() {\n    let [hasMore, sethasMore] = useState(true);\n    const [pageNumber, setpageNumber] = useState(2);\n  const [sort, setSort] = useState([]);\n  const [postLoading, setpostLoading] = useState(false)\n  // const navigate = useNavigate();\n    const navigate = useNavigate();\n    const [allLoadedPost, setallLoadedPost] = useState([])\n\n  const adminPostData = async () => {\n    setpostLoading(true)\n    try {\n      const { data } = await axios.get(`/api/post/${'admin'}/?page=1`);\n\n      setSort(data);\n      setallLoadedPost(data);\n      setpostLoading(false)\n    } catch (error) {\n      \n    }\n\n   }\nuseEffect(() => {\n  adminPostData();\n\n}, [])\n\n  const dispatch = useDispatch();\n\n      const categoryList = useSelector((state) => state.categoryList);\n      const { categories } = categoryList;\n      const subCategoryList = useSelector((state) => state.subCategoryList);\n      const { subCategories } = subCategoryList;\n   useEffect(() => {\n   \n     \n    \n       dispatch(listCategory());\n     \n       dispatch(listSubCategory());\n     \n   }, [dispatch]);\n\n\n  const deleteHandel = async (postId) => {\n    if (postId) {\n      try {\n        window.alert(\"Are you sure?\");\n        const res = await axios.delete(`/api/post/${postId}`);\n        if (res) {\n          dispatch(listpost());\n        \n        }\n      } catch (error) {\n      }\n    }\n  };\n\n\nconst [catPage, setcatPage] = useState(2)\nconst [SubcatPage, setSubcatPage] = useState(2);\nconst [catId, setcatId] = useState()\nconst [subcatId, setsubcatId] = useState()\n  const dateFilter = (date) => {\n    \n\n    const filteredData =\n      sort &&\n      sort.filter((curElem) => {\n        return (\n         \n           new Date(curElem.createdAt).toISOString() === new Date(date).toISOString()\n          \n        );\n      });\n\n\n    setSort(filteredData);\n    if (!date) {\n      const sortedData =\n        sort &&\n        sort.sort((a, b) => {\n          const dateAInMillis = new Date(a.createdAt).getTime();\n          const dateBInMillis = new Date(b.createdAt).getTime();\n\n          return dateBInMillis - dateAInMillis;\n        });\n      setSort(sortedData);\n    }\n  };\n  const categoryHandler = async (category) => {\n\n    if (subcatId) {\n      setsubcatId();\n    }\n    setcatPage(2);\n    sethasMore(() => true);\n  setcatId(category);\n    if (category === \"All\") {\n\n     \n      setSort(allLoadedPost);\n    } else {\n      const {data} = await axios.get(`/api/category/${category}/?page=1`);\n if (data.length < 20) {\n   sethasMore(() => false);\n }\n      \n      setSort(data);\n    }\n  };\n\n  const subCategoryHandel = async(subCategory) => {\n    console.log(subCategory);\n      setSubcatPage(2);\n      sethasMore(() => true);\n      setsubcatId(subCategory)\n    if (subCategory === \"All\") {\n\n    \n      setSort(allLoadedPost);\n    } else {\n     const { data } = await axios.get(\n       `/api/subCategory/${subCategory}/?page=1`\n     );\n\n      if (data.length <5 ) {\n  sethasMore(() => false);\n      }\n      setSort(data);\n\n     \n    }\n  };\n\n    const loadNextPost = async () => {\n\n\n   \n        const data = await axios.get(`/api/post/${'admin'}/?page=${pageNumber}`);\n        if (data.status === 200) {\n          if (data.data.length < 20) {\n            sethasMore(() => false);\n          }\n  \n          setpageNumber(pageNumber + 1);\n  \n          setSort([...sort, ...data.data]);\n        }\n      \n\n    };\n\n    const loadNextCAtFilterPost = async() => {\n\n         const {data ,status} = await axios.get(\n           `/api/category/${catId}/?page=${catPage}`\n         );\n        if (status === 200) {\n          console.log(data.length);\n          if (data.length < 20) {\n            sethasMore(() => false);\n          }\n  \n          setcatPage(catPage + 1);\n  console.log(catPage);\n          setSort([...sort, ...data]);\n        }\n    }\n        const loadNextsubCAtFilterPost = async() => {\n\n         const { data, status } = await axios.get(\n           `/api/subCategory/${subcatId}/?page=${SubcatPage}`\n         );\n        if (status === 200) {\n          console.log(data.length);\n          if (data.length < 5) {\n            sethasMore(() => false);\n          }\n  \n          setSubcatPage(SubcatPage + 1);\n\n          setSort([...sort, ...data]);\n        }\n    }\n\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <div class=\"col-md-12 grid-margin stretch-card\">\n                    <div class=\"card\">\n                      <div class=\"card-body\">\n                        <h4 class=\"card-title text-center\">\n                          All post collection\n                        </h4>\n                        <div className=\"allFilters\">\n                          <div\n                            style={{\n                              display: 'inline-block',\n                              marginRight: '100px',\n                              float: 'left',\n                            }}\n                            className=\"filters mb-3\"\n                          >\n                            <span style={{ display: 'block' }}>\n                              {' '}\n                              Filter by Date\n                            </span>\n                            <input\n                              type=\"date\"\n                              onChange={(e) => dateFilter(e.target.value)}\n                            />\n                          </div>\n\n                          <div\n                            style={{\n                              display: 'inline-block',\n                              marginLeft: '10px',\n                            }}\n                            className=\"filters mb-3\"\n                          >\n                            <span style={{ display: 'block' }}>\n                              {' '}\n                              Filter by Category\n                            </span>\n                            <select\n                              onChange={(e) => {\n                                categoryHandler(e.target.value)\n                       \n                              }}\n                              className=\"form-control\"\n                              name=\"\"\n                              id=\"\"\n                              style={{ width: '100%' }}\n                            >\n                              <option value={'All'}>All</option>\n                              {categories &&\n                                categories.map((category) => (\n                                  <option value={category._id}>\n                                    {category.category}\n                                  </option>\n                                ))}\n                            </select>\n                          </div>\n                          <div\n                            style={{\n                              display: 'inline-block',\n                              marginLeft: '10px',\n                              float: 'right',\n                            }}\n                            className=\"filters mb-3\"\n                          >\n                            <span style={{ display: 'block' }}>\n                              {' '}\n                              Filter by SubCategory\n                            </span>\n                            <select\n                              onChange={(e) =>\n                                subCategoryHandel(e.target.value)\n                              }\n                              className=\"form-control\"\n                              name=\"\"\n                              id=\"\"\n                              style={{ width: '100%' }}\n                            >\n                              <option value=\"All\">All</option>\n                              {subCategories &&\n                                subCategories.map((subCategory) => (\n                                  <option value={subCategory._id}>\n                                    {subCategory.subCategoryName}\n                                  </option>\n                                ))}\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"\">\n                          <table>\n                            <thead>\n                              <tr>\n                                <th>Post Title</th>\n                                <th>Post Image</th>\n                                <th>Posted By</th>\n                                <th>Category</th>\n                                <th>Sub Category</th>\n\n                                <th>Featured</th>\n                                <th>Featured Top</th>\n                                <th>Posted At</th>\n\n                                <th>Actions</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {sort &&\n                                sort.map((post) => (\n                                  <tr>\n                                    <td> {post.postitle}</td>\n                                    <td>\n                                      <img\n                                        src={post.img}\n                                        height=\"100px\"\n                                        width=\"100px\"\n                                      />\n                                    </td>\n                                    <td>\n                                      {post &&\n                                        post.author &&\n                                        post.author.name &&\n                                        post.author.name}\n                                    </td>\n                                    <td>\n                                      {post &&\n                                        post.category &&\n                                        post.category.name &&\n                                        post.category.name}\n                                    </td>\n                                    <td>\n                                      {post &&\n                                        post.subCategory &&\n                                        post.subCategory.name &&\n                                        post.subCategory.name}\n                                    </td>\n\n                                    <td>\n                                      {' '}\n                                      {post.isFetaured === true ? 'Yes' : 'No'}\n                                    </td>\n                                    <td>\n                                      {' '}\n                                      {post.isFetauredTop === true\n                                        ? 'Yes'\n                                        : 'No'}\n                                    </td>\n                                    <td>\n                                      {' '}\n                                      {new Date(post.createdAt).toDateString()}\n                                    </td>\n\n                                    <td>\n                                      <button\n                                        className=\"btn btn-danger mb-2\"\n                                        style={{ padding: ' 0.875rem 1rem' }}\n                                        onClick={() => deleteHandel(post._id)}\n                                      >\n                                        Trash\n                                      </button>\n\n                                      <Link\n                                        className=\"btn btn-primary m-1\"\n                                        style={{\n                                          textDecoration: 'none',\n                                          color: '#fff',\n                                          width: '100%',\n                                        }}\n                                        to={`/admin/updateposts/${post._id}`}\n                                      >\n                                        Edit\n                                      </Link>\n                                    </td>\n                                  </tr>\n                                ))}\n\n                              {postLoading ? <>\n                              \n                              </> : null}\n                            </tbody>\n                          </table>\n                        </div>\n                        {sort && sort.length ? (\n                          <>\n                            <InfiniteScroll\n                              dataLength={sort.length} //This is important field to render the next data\n                              next={()=> {\n\n                                // catId\n                                //   ? loadNextCAtFilterPost\n                                //   : subcatId\n                                //   ? loadNextsubCAtFilterPost\n                                //   // : catId === 'All' || subcatId === 'All'\n                                //   // ? loadNextPost\n                                //   : loadNextPost\n   if (catId === 'All' ) {\n    loadNextPost();\n   }else if( subcatId === 'All'){\n loadNextPost();\n   }\n   else\n                                if (catId && catId !== 'All' && !subcatId) {\n                                  loadNextCAtFilterPost();\n                                }\n\n  if (subcatId && subcatId !== 'All') {\n    loadNextsubCAtFilterPost();\n  }\n  \n   \n    if (!subcatId && !catId ) {\n    loadNextPost();\n    }\n    \n\n\n                              }\n                              }\n                              hasMore={hasMore}\n                              loader={<ClipLoader />}\n                            ></InfiniteScroll>\n                          </>\n                        ) : (\n                          ''\n                        )}\n\n                        {/* <Pagination\n                            postsPerPage={postsPerPage}\n                            totalPosts={sort && sort.length}\n                            paginate={paginate}\n                          /> */}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AllPost;\n","export const RSS_LIST_REQUEST = \"RSS_LIST_REQUEST\";\nexport const RSS_LIST_SUCCESS = \"RSS_LIST_SUCCESS\";\nexport const RSS_LIST_FAIL = \"RSS_LIST_FAIL\";\n\nexport const SINGLE_RSS_LIST_REQUEST = \"SINGLE_RSS_LIST_REQUEST\";\nexport const SINGLE_RSS_LIST_SUCCESS = \"SINGLE_RSS_LIST_SUCCESS\";\nexport const SINGLE_RSS_LIST_FAIL = \"SINGLE_RSS_LIST_FAIL\";\n","import  Axios  from \"axios\";\nimport { RSS_LIST_FAIL, RSS_LIST_REQUEST, RSS_LIST_SUCCESS, SINGLE_RSS_LIST_FAIL, SINGLE_RSS_LIST_REQUEST, SINGLE_RSS_LIST_SUCCESS } from \"../constants/rssConstants\";\n\n\nexport const listRss = () => async (dispatch) => {\n  dispatch({\n    type: RSS_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get(`/api/rss/all`);\n    dispatch({ type: RSS_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: RSS_LIST_FAIL, payload: error.message });\n  }\n};\n\nexport const singleRss = (id) => async (dispatch) => {\n  dispatch({\n    type: SINGLE_RSS_LIST_REQUEST,\n    payload: id\n  });\n  try {\n    const { data } = await Axios.get(`/rss/${id}`);\n    dispatch({ type: SINGLE_RSS_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: SINGLE_RSS_LIST_FAIL, payload: error.message });\n  }\n};\n\n","import React, { useEffect } from 'react';\nimport Header from '../components/Header';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport Sidebar from '../components/Sidebar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listpost } from '../actions/postActions';\nimport { listCategory } from '../actions/categoryActions';\nimport { listSubCategory } from '../actions/subCategoryAction';\nimport { allUserAction } from '../actions/userActions';\nimport { listRss } from '../actions/rssActions';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { useNavigate } from 'react-router-dom';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nfunction Dashboard() {\n  const Navigate = useNavigate()\n       \n  const dispatch = useDispatch();\n  const categoryList = useSelector((state) => state.categoryList);\n  const { categories } = categoryList;\n  const subCategoryList = useSelector((state) => state.subCategoryList);\n  const { subCategories } = subCategoryList;\n  const rssList = useSelector((state) => state.rssList);\n  const { rss } = rssList;\n  const userList = useSelector((state) => state.allUsers);\n  const { users } = userList;\n  const postList = useSelector((state) => state.postList);\n  const { posts, loading } = postList;\n  useEffect(() => {\n\n      dispatch(listpost());\n    \n\n   \n      dispatch(listCategory());\n    \n\n   \n      dispatch(listSubCategory());\n   \n      dispatch(listRss());\n   \n      dispatch(allUserAction());\n    \n  }, [dispatch]);\n\n  const data = {\n    labels: ['Posts', 'Users', 'Categories', 'Sub Categories', 'RSS'],\n    datasets: [\n      {\n        label: '# of Votes',\n        data: [\n          posts && posts.length,\n          users && users.length,\n          categories && categories.length,\n          subCategories && subCategories.length,\n          rss && rss.length,\n        ],\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      {/* <h4 class=\"card-title\">All news categories</h4> */}\n                      <div className=\"col-sm-9 myChart\">\n                        {loading === true ? (\n                          <ClipLoader\n                            color=\"skyblue\"\n                            loading=\"true\"\n                            size={54}\n                          />\n                        ) : categoryList.loading === true ? (\n                          <ClipLoader\n                            color=\"skyblue\"\n                            loading=\"true\"\n                            size={54}\n                          />\n                        ) : subCategoryList.loading === true ? (\n                          <ClipLoader\n                            color=\"skyblue\"\n                            loading=\"true\"\n                            size={54}\n                          />\n                        ) : userList.loading === true ? (\n                          <ClipLoader\n                            color=\"skyblue\"\n                            loading=\"true\"\n                            size={54}\n                          />\n                        ) : rssList.loading === true ? (\n                          <ClipLoader\n                            color=\"skyblue\"\n                            loading=\"true\"\n                            size={54}\n                          />\n                        ) : (\n                          <Doughnut data={data} />\n                        )}\n\n                        {/* <Doughnut data={data} /> */}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useAuth} from '../hooks/user-auth'\nimport Swal from 'sweetalert2'\nimport {  useLocation, useNavigate } from \"react-router-dom\";\nimport { signin } from \"../actions/userActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nfunction LoginScreen() {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo, error } = userSignin;\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const auth = useAuth()\n\n  const submit = async (e) => {\n    e.preventDefault();\n    // dispatch(signin(email, password));\n    auth.signin(email, password, () => navigate('/admin/dashboard'));\n  };\n  \n  \n \n   \n  return (\n    <>\n    \n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper full-page-wrapper\">\n          <div className=\"content-wrapper d-flex align-items-center auth px-0\">\n            <div className=\"row w-100 mx-0\">\n              <div className=\"col-lg-4 mx-auto\">\n                <div className=\"auth-form-light text-left py-5 px-4 px-sm-5\">\n                  <h4 style={{ textAlign: \"center\" }}>Thehawk</h4>\n\n                  <form className=\"pt-3\">\n                    <div className=\"form-group\">\n                      <input\n                        type=\"email\"\n                        className=\"form-control form-control-lg\"\n                        id=\"exampleInputEmail1\"\n                        placeholder=\"email\"\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <input\n                        type=\"password\"\n                        className=\"form-control form-control-lg\"\n                        id=\"exampleInputPassword1\"\n                        placeholder=\"Password\"\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                    </div>\n                    <div className=\"mt-3\">\n                      <a\n                        className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                        onClick={submit}\n                      >\n                        Login\n                      </a>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LoginScreen;\n","import { initializeApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyACr3eEQJuJvjnz2cDp15IlhDwl5-n4Wz8\",\n  authDomain: \"thehawk-d3de2.firebaseapp.com\",\n  projectId: \"thehawk-d3de2\",\n  storageBucket: \"thehawk-d3de2.appspot.com\",\n  messagingSenderId: \"680595129510\",\n  appId: \"1:680595129510:web:5b38a05e0918f5115ca067\",\n  measurementId: \"G-6M0KEQS18G\",\n};\n\nexport const app = initializeApp(firebaseConfig);\nexport const storage = getStorage(app);\n","import React from \"react\";\nimport { Quill } from \"react-quill\";\n\n// Custom Undo button icon component for Quill editor. You can import it directly\n// from 'quill/assets/icons/undo.svg' but I found that a number of loaders do not\n// handle them correctly\nconst CustomUndo = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n    />\n  </svg>\n);\n\n// Redo button icon component for Quill editor\nconst CustomRedo = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n    />\n  </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n  this.quill.history.undo();\n}\nfunction redoChange() {\n  this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n  \"arial\",\n  \"comic-sans\",\n  \"courier-new\",\n  \"georgia\",\n  \"helvetica\",\n  \"Inter\",\n  \"lucida\",\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nexport const modules = (props) => ({\n  toolbar: {\n    container: \"#\" + props,\n    handlers: {\n      undo: undoChange,\n      redo: redoChange,\n    },\n  },\n  history: {\n    delay: 500,\n    maxStack: 100,\n    userOnly: true,\n  },\n});\n\n// Formats objects for setting up the Quill editor\nexport const formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"align\",\n  \"strike\",\n  \"script\",\n  \"blockquote\",\n  \"background\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n  \"color\",\n  \"code-block\",\n];\n\n// Quill Toolbar component\nexport const QuillToolbar = (props) => {\n  return (\n    <>\n      {props.toolbarId !== undefined && (\n        <div id={props.toolbarId}>\n          <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n          </span>\n          <span className=\"ql-formats\">\n            <select className=\"ql-font\">\n              <option value=\"arial\"> Arial </option>\n              <option value=\"comic-sans\">Comic Sans</option>\n              <option value=\"courier-new\">Courier New</option>\n              <option value=\"georgia\">Georgia</option>\n              <option value=\"helvetica\">Helvetica</option>\n              <option value=\"Inter\" selected>\n                Inter\n              </option>\n              <option value=\"lucida\">Lucida</option>\n            </select>\n            <select className=\"ql-size\">\n              <option value=\"extra-small\">Extra Small</option>\n              <option value=\"small\">Small</option>\n              <option value=\"medium\" selected>\n                Medium\n              </option>\n              <option value=\"large\">Large</option>\n            </select>\n            <select className=\"ql-header\">\n              <option value=\"1\">Heading 1</option>\n              <option value=\"2\">Heading 2</option>\n              <option value=\"3\">Heading 3</option>\n              <option value=\"4\">Heading 4</option>\n              <option value=\"5\">Heading 5</option>\n              <option value=\"6\">Heading 6</option>\n              <option value=\"\" selected>\n                Normal\n              </option>\n            </select>\n          </span>\n          <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n          </span>\n          <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n          </span>\n          <span className=\"ql-formats\">\n            <select className=\"ql-align\" />\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n          </span>\n          <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n          </span>\n          <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n          </span>\n          <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n              <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n              <CustomRedo />\n            </button>\n          </span>\n        </div>\n      )}\n    </>\n  );\n};\nexport default QuillToolbar;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { styled } from \"@mui/material/styles\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"@firebase/storage\";\nimport Button from \"@mui/material/Button\";\nimport { listCategory } from \"../actions/categoryActions\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { storage } from \"../firebase\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { listSubCategory } from \"../actions/subCategoryAction\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport ReactQuill from \"react-quill\";\nimport EditorToolbar, { modules, formats } from \"../components/EditorToolbar\";\nimport \"react-quill/dist/quill.snow.css\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Slide from \"@mui/material/Slide\";\nimport { listpost } from \"../actions/postActions\";\nimport { allUserAction } from \"../actions/userActions\";\nimport { useAuth } from \"../hooks/user-auth\";\n\n// import \"./TextEditor.css\";\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nfunction UpdateScreen() {\n        const Navigate = useNavigate();\n      \n  const id = useParams();\n  const [open, setOpen] = useState(false);\n  const postList = useSelector((state) => state.postList);\n  const { posts, loading } = postList;\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const userList = useSelector((state) => state.allUsers);\n  const { users } = userList;\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const [afterPostModalOpen, setAfterPostModalOpen] = useState(false);\n\n  // const afterPost = () => {\n  //   setAfterPostModalOpen(true);\n  // };\n\n  const afterPostHandelClose = () => {\n    setAfterPostModalOpen(false);\n  };\n  const [userInfo, setuserInfo] = useState({\n    description: \"\",\n  });\n\n  const ondescription = (value) => {\n    setuserInfo({ ...userInfo, description: value });\n  };\n\n\n\n\n  const Input = styled(\"input\")({\n    display: \"none\",\n  });\n  const categoryList = useSelector((state) => state.categoryList);\n  const { categories } = categoryList;\n  const subCategoryList = useSelector((state) => state.subCategoryList);\n  const { subCategories } = subCategoryList;\n  const [imgAlt, setImgAlt] = useState(\"\");\nconst [isBreaking, setisBreaking] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [video, setVideo] = useState();\n  const [text, setText] = useState(\"\");\n  const [trend, setTrend] = useState();\n  const [popular, setPopular] = useState();\n  const [image, setImage] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [subCategoryId, setSubCategoryId] = useState(\"\");\n  const [isRight, setIsRight] = useState();\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [isFetaured, setIsFetaured] = useState();\n  const [isFetauredTop, setIsFetauredTop] = useState();\n  const [disable, setDisable] = useState(true);\n  let [load, setLoad] = useState(false);\n  const [subHeading, setSubHeading] = useState();\n  const [name, setName] = useState(\"\");\n  const [_id, set_id] = useState(\"\");\n  const [professionalName, setProfessionalName] = useState(\"\");\n  const [socialShare, setSocialShare] = useState(false);\n  const [pageTitle, setpageTitle] = useState();\n  const [pageDescription, setpageDescription] = useState();\n  const [pageKeyWords, setpageKeyWords] = useState();\n  const [pageTags, setpageTags] = useState();\nconst [loadingData, setloadingData] = useState(false)\n  const [post, setPost] = useState({})\n  const getDataUpdateAble = async() => {\n     window.scrollTo({\n       top: 0,\n       behavior: 'smooth',\n     });\nsetloadingData(true);\nconst { data, status } = await axios.get(`/api/singlepost/${id.id}`);\nif (status===200) {\n  setloadingData(false);\n}\nsetPost(...data.post)\n  }\n  useEffect(() => {\n   getDataUpdateAble()\n  }, [])\n  \n  useEffect(() => {\nconsole.log(post);\n    setText(post && post.postText);\n\n    setTitle(post && post.postitle);\n    setImgAlt(post && post.imgAlt);\n    setImage(post && post.img);\n    setCategory(post && post.category &&post.category.name &&  post.category.name);\n    setSubCategory(post &&post.subCategory &&  post.subCategory.name &&  post.subCategory.name);\n    setSubCategoryId(post && post.subCategory &&post.subCategory.id &&  post.subCategory.id);\n    setIsRight(post && post.isRight);\n    setCategoryId(post && post.category && post.category.id && post.category.id);\n    setIsFetaured(post && post.isFetaured);\n    setName(post?.author?.name);\n    setisBreaking(post?.isBreaking);\n    set_id(post?.author?.id);\n    setIsFetauredTop(post && post.isFetauredTop);\n    setDisable(true);\n    setLoad(false);\n    setTrend(post && post.isTrending);\n    setPopular(post && post.isPopular);\n    if (post && post.description) {\n      setuserInfo({ description: post.description });\n    }\n    setSubHeading(post && post.subHeading);\n    setSocialShare(post && post.socialShare);\n    setpageKeyWords(post && post.keyWords);\n    setpageDescription(post && post.pageDescription);\n    setpageTitle(post && post.pageTitle);\n    setpageTags(post && post.tags);\n    setVideo(post && post.video);\n    setDisable(false);\n   \n  }, [post, id.id]);\n\n  const userHandel = (e) => {\n    setName(e.target.value);\n   \n    const filterCategory =\n      users &&\n      users.filter((curElem) => {\n        return curElem.name === e.target.value;\n      });\n      set_id(filterCategory[0]._id);\n  };\n  const imageHandler = async (e) => {\n    const file = e.target.files[0];\n    setLoad(true);\n    const formdata = new FormData();\n    formdata.append('file', file);\n    formdata.append('upload_preset', 'thehawk');\n    const res = await axios.post(\n      'https://api.cloudinary.com/v1_1/thehawk/upload',\n      formdata\n    );\n\n    setImage(res.data.secure_url);\n    setLoad(false);\n  };\n\n\n  const setdatFromMedia = (url) => {\n    setImage(url);\n    setOpen(false);\n  };\n  const dispatch = useDispatch();\n\n  const auth = useAuth()\n  useEffect(() => {\n    dispatch(listCategory());\n    dispatch(listSubCategory());\n \n      dispatch(listpost());\n    \n    // setName(auth.user.name);\n    // set_id(auth.user._id);\n    // setProfessionalName(auth.user.professionalName);\n  }, [  dispatch ]);\n\n  const categoryIdHandel = (e) => {\n    setCategory(e.target.value);\n    setDisable(false);\n    const filterCategory =\n      categories &&\n      categories.filter((curElem) => {\n        return curElem.category === e.target.value;\n      });\n    setCategoryId(filterCategory[0]._id);\n  };\n  const subCategoryIdHandel = (e) => {\n    setSubCategory(e.target.value);\n    const filterCategory =\n      subCategories &&\n      subCategories.filter((curElem) => {\n        return curElem.subCategoryName === e.target.value;\n      });\n    setSubCategoryId(filterCategory[0]._id);\n  };\n\n  const postDataSubmit = async (e) => {\n    e.preventDefault();\n    e.persist();\n    const res = await axios.patch(`/api/post/${id.id}`, {\n      title,\n      text,\n      image,\n      category,\n      categoryId,\n      isFetaured,\n      isFetauredTop,\n      subCategory,\n      subCategoryId,\n      isRight,\n      isBreaking,\n      name,\n      _id,\n      trend,\n      popular,\n      description: userInfo.description,\n      subHeading,\n      socialShare,\n      professionalName,\n      pageTitle,\n      pageDescription,\n      pageKeyWords,\n      pageTags,\n      video,\n      imgAlt,\n    });\n    if (res.status === 200) {\n      setAfterPostModalOpen(true);\n      setTitle(\"\");\n      setText(\"\");\n      setImage(\"\");\n      setCategory(\"\");\n      setSubCategory(\"\");\n      setSubCategoryId(\"\");\n      setIsRight(false);\n      setCategoryId(\"\");\n      setIsFetaured(false);\nsetisBreaking(false)\n      setIsFetauredTop(false);\n      setDisable(true);\n      setLoad(false);\n      setTrend(false);\n      setPopular(false);\n      setuserInfo({ ...userInfo, description: \"\" });\n      setSubHeading(\"\");\n      setSocialShare(false);\n      setpageKeyWords(\"\");\n      setpageDescription(\"\");\n      setpageTitle(\"\");\n      setpageTags(\"\");\n      setVideo(\"\");\n      setImgAlt(\"\");\n      Navigate('/admin/posts');\n    }\n  };\n  \n  useEffect(() => {\n    dispatch(allUserAction());\n   \n  }, [dispatch]);\n\n  const [mediaImgFromPost, setMediaImgFromPost] = useState('');\n  const [searchMediaUrl, setsearchMediaUrl] = useState('');\n\n    const mediaSearch = async () => {\n      // searchMediaUrl;\n      const { data } = await axios.post(\n        `/api/media/?search=${searchMediaUrl}`,\n        {}\n      );\n      console.log(data);\n      if (data) {\n        setMediaImgFromPost(data);\n      }\n    };\n  return (\n    <>\n      <Header />\n      <fieldset disabled={loadingData}>\n        <div className=\"container-scroller\">\n          <div className=\"container-fluid page-body-wrapper\">\n            <Sidebar />\n            <div className=\"main-panel\">\n              <div className=\"content-wrapper\">\n                <div className=\"row\">\n                  <div className=\"col-sm-12\">\n                    <div class=\"col-12 grid-margin stretch-card\">\n                      <div class=\"card\">\n                        <div class=\"card-body\">\n                          <h4 class=\"card-title\">Add post</h4>\n                          <p class=\"card-description\">All post details</p>\n                          <form class=\"forms-sample\">\n                            <div class=\"form-group\">\n                              <label for=\"exampleFormControlFile1\">\n                                Post Title\n                              </label>\n                              <input\n                                class=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"Title\"\n                                onChange={(e) => setTitle(e.target.value)}\n                                value={title}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <label>Sub Heading</label>\n                              <input\n                                class=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"Sub Heading\"\n                                onChange={(e) => setSubHeading(e.target.value)}\n                                value={subHeading}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <label for=\"exampleFormControlTextarea1\">\n                                Post text\n                              </label>\n                              <textarea\n                                class=\"form-control\"\n                                id=\"exampleFormControlTextarea1\"\n                                rows=\"3\"\n                                onChange={(e) => setText(e.target.value)}\n                                value={text}\n                              ></textarea>\n                            </div>\n                            <label className=\"mb-2\">Post full text</label>\n                            <EditorToolbar toolbarId={\"t1\"} />\n                            <ReactQuill\n                              theme=\"snow\"\n                              value={userInfo.description}\n                              onChange={ondescription}\n                              placeholder={\"Write the full post content...\"}\n                              modules={modules(\"t1\")}\n                              formats={formats}\n                            />\n                            <div className=\"mb-2 mt-3\">Post Image</div>\n                            {/* <h1>Image uploading {progress}%</h1> */}\n                            <label htmlFor=\"contained-button-file\">\n                              <Input\n                                accept=\"image/*\"\n                                id=\"contained-button-file\"\n                                multiple\n                                type=\"file\"\n                                onChange={imageHandler}\n                              />\n                              <Button\n                                variant=\"contained\"\n                                component=\"span\"\n                                className=\"mb-2\"\n                              >\n                                Upload\n                              </Button>\n                            </label>\n                            <Button\n                              variant=\"contained\"\n                              style={{\n                                width: \"auto\",\n                                marginLeft: \"20px\",\n                                marginRight: \"10px\",\n                              }}\n                              className=\"mb-2\"\n                              onClick={handleClickOpen}\n                            >\n                              Select from media\n                            </Button>\n                            or Add video url\n                            <br />\n                            <div class=\"form-group\">\n                              <label>Video embeded url</label>\n                              <input\n                                class=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"iframe/ youtube video embed link\"\n                                onChange={(e) => setVideo(e.target.value)}\n                                value={video}\n                              />\n                            </div>\n                            <span\n                              style={{ color: \"#ef5350\", marginBottom: \"20px\" }}\n                            >\n                              {\" \"}\n                              *warning: this data will just working for video\n                              section's posts\n                            </span>\n                            <div class=\"form-group mt-3\">\n                              <label for=\"exampleFormControlFile1\">\n                                Image Alt (if you upload a new image then add\n                                this.)\n                              </label>\n                              <input\n                                class=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"img alt\"\n                                onChange={(e) => setImgAlt(e.target.value)}\n                                value={imgAlt}\n                              />\n                            </div>\n                            <div className=\"image_previw\">\n                              <ClipLoader\n                                color=\"skyblue\"\n                                loading={load}\n                                size={50}\n                              />\n\n                              <Dialog\n                                open={open}\n                                TransitionComponent={Transition}\n                                keepMounted\n                                onClose={handleClose}\n                                aria-describedby=\"alert-dialog-slide-description\"\n                              >\n                                <DialogTitle>\n                                  <h3>Medias</h3>\n                                  <div class=\"form-group\">\n                                    <label>Search</label>\n                                    <input\n                                      class=\"form-control\"\n                                      type=\"text\"\n                                      placeholder=\"Enter Image Alt value to serach a specific image\"\n                                      onChange={(e) =>\n                                        setsearchMediaUrl(e.target.value)\n                                      }\n                                      // value={video}\n                                    />\n\n                                    <button\n                                      type=\"submit\"\n                                      className=\"btn btn-primary me-2\"\n                                      onClick={mediaSearch}\n                                      style={{ marginTop: \"10px\" }}\n                                      // disabled={adPostLoad}\n                                    >\n                                      Search\n                                    </button>\n                                  </div>\n                                </DialogTitle>\n                                <DialogContent>\n                                  {/* <ClipLoader\n                                  color=\"skyblue\"\n                                  loading={loading}\n                                  size={54}\n                                /> */}\n\n                                  {mediaImgFromPost &&\n                                    mediaImgFromPost.map((curElem) => (\n                                      <>\n                                        <img\n                                          onClick={() =>\n                                            setdatFromMedia(curElem.img)\n                                          }\n                                          className=\"m-3\"\n                                          src={curElem.img}\n                                          alt=\"\"\n                                          height=\"100px\"\n                                          width=\"100px\"\n                                        />\n                                      </>\n                                    ))}\n                                </DialogContent>\n                                {/* <DialogActions>\n          <Button onClick={handleClose}>Disagree</Button>\n          <Button onClick={handleClose}>Agree</Button>\n        </DialogActions> */}\n                              </Dialog>\n                              <img\n                                // alt=\"\"\n                                src={image}\n                                style={{\n                                  \"max-width\": \"80%\",\n                                  \"max-height\": \"60%\",\n\n                                  display: \"block\",\n                                }}\n                              />\n                            </div>\n                            <Dialog\n                              className=\"afterPostModal\"\n                              open={afterPostModalOpen}\n                              onClose={afterPostHandelClose}\n                              aria-labelledby=\"alert-dialog-title\"\n                              aria-describedby=\"alert-dialog-description\"\n                            >\n                              <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\n                              <DialogContent>\n                                <DialogContentText\n                                  style={{ textAlign: \"center\" }}\n                                  id=\"alert-dialog-description\"\n                                >\n                                  See the previw of your post on live\n                                  <Button\n                                    style={{\n                                      width: \"83%\",\n                                      margin: \"16px 57px\",\n                                    }}\n                                    variant=\"outlined\"\n                                    onClick={afterPostHandelClose}\n                                  >\n                                    View\n                                  </Button>\n                                  {/* <Button\n                                  style={{ width: \"83%\", margin: \"16px 57px\" }}\n                                  variant=\"outlined\"\n                                  onClick={afterPostHandelClose}\n                                  autoFocus\n                                >\n                                  Create a New post\n                                </Button> */}\n                                </DialogContentText>\n                              </DialogContent>\n                            </Dialog>\n                            <div\n                              class=\"form-group\"\n                              style={{ marginTop: \"20px\" }}\n                            >\n                              <label for=\"exampleSelectGender\">Category</label>\n                              <select\n                                class=\"form-control\"\n                                id=\"exampleSelectGender\"\n                                onChange={categoryIdHandel}\n                                value={category}\n                              >\n                                <option>\n                                  {!category ? \"Select the post category\" : \"\"}\n                                </option>\n                                {categories &&\n                                  categories.map((elem) => (\n                                    <option>{elem.category}</option>\n                                  ))}\n                              </select>\n                            </div>\n                            <div\n                              class=\"form-group\"\n                              style={{ marginTop: \"20px\" }}\n                            >\n                              <label for=\"exampleSelectGender\">\n                                If you want to change the user\n                              </label>\n                              <select\n                                class=\"form-control\"\n                                id=\"exampleSelectGender\"\n                                onChange={userHandel}\n                                value={name}\n                              >\n                                {users &&\n                                  users.map((elem) => (\n                                    <option>{elem.name}</option>\n                                  ))}\n                              </select>\n                            </div>\n                            <div class=\"form-group\">\n                              <label for=\"exampleSelectGender\">\n                                Sub Category\n                              </label>\n                              <select\n                                class=\"form-control\"\n                                id=\"exampleSelectGender\"\n                                onChange={subCategoryIdHandel}\n                                disabled={disable}\n                                value={subCategory}\n                              >\n                                <option>\n                                  {!subCategory\n                                    ? \"Select the post Sub Category \"\n                                    : \"\"}\n                                </option>\n                                {subCategories &&\n                                  subCategories\n                                    .filter(\n                                      (person) =>\n                                        person.categoryId === categoryId\n                                    )\n                                    .map((elem) => (\n                                      <option>{elem.subCategoryName}</option>\n                                    ))}\n                              </select>\n                            </div>\n                            <div class=\"form-group\">\n                              <label htmlFor=\"isfetaured\">\n                                Add as category fetaured post\n                              </label>\n                              <input\n                                style={{\n                                  height: \"28px\",\n                                  width: \"18px\",\n                                  display: \"block\",\n                                }}\n                                id=\"isfetaured\"\n                                type=\"checkbox\"\n                                onChange={(e) =>\n                                  setIsFetaured(e.target.checked)\n                                }\n                                checked={isFetaured}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <label htmlFor=\"isTopfetaured\">Add to top</label>\n                              <input\n                                style={{\n                                  height: \"28px\",\n                                  width: \"18px\",\n                                  display: \"block\",\n                                }}\n                                id=\"isTopfetaured\"\n                                type=\"checkbox\"\n                                onChange={(e) =>\n                                  setIsFetauredTop(e.target.checked)\n                                }\n                                checked={isFetauredTop}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <label htmlFor=\"isRight\">\n                                Add to Right Column\n                              </label>\n                              <input\n                                style={{\n                                  height: \"28px\",\n                                  width: \"18px\",\n                                  display: \"block\",\n                                }}\n                                id=\"isRight\"\n                                type=\"checkbox\"\n                                onChange={(e) => setIsRight(e.target.checked)}\n                                checked={isRight}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <label htmlFor=\"isRight\">Tending?</label>\n                              <input\n                                style={{\n                                  height: \"28px\",\n                                  width: \"18px\",\n                                  display: \"block\",\n                                }}\n                                id=\"isRight\"\n                                type=\"checkbox\"\n                                onChange={(e) => setTrend(e.target.checked)}\n                                checked={trend}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <label htmlFor=\"isRight\"> DON'T MISS?</label>\n                              <input\n                                style={{\n                                  height: \"28px\",\n                                  width: \"18px\",\n                                  display: \"block\",\n                                }}\n                                id=\"isRight\"\n                                type=\"checkbox\"\n                                onChange={(e) => setPopular(e.target.checked)}\n                                checked={popular}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <label htmlFor=\"isRight\"> is Breaking</label>\n                              <input\n                                style={{\n                                  height: \"28px\",\n                                  width: \"18px\",\n                                  display: \"block\",\n                                }}\n                                id=\"isRight\"\n                                type=\"checkbox\"\n                                onChange={(e) =>\n                                  setisBreaking(e.target.checked)\n                                }\n                                checked={isBreaking}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <label htmlFor=\"isRight\">\n                                Social Share Button?\n                              </label>\n                              <input\n                                style={{\n                                  height: \"28px\",\n                                  width: \"18px\",\n                                  display: \"block\",\n                                }}\n                                type=\"checkbox\"\n                                onChange={(e) =>\n                                  setSocialShare(e.target.checked)\n                                }\n                                checked={socialShare}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <label>Tags</label>\n                              <input\n                                class=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"use comma for write new tags or multiple tags\"\n                                onChange={(e) => setpageTags(e.target.value)}\n                                value={pageTags}\n                              />\n                            </div>\n                            <h5>SEO options</h5>\n                            <div class=\"form-group\">\n                              <label>Page title</label>\n                              <input\n                                class=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"Write the page title\"\n                                onChange={(e) => setpageTitle(e.target.value)}\n                                value={pageTitle}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <label>Page Description</label>\n                              <input\n                                class=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"Write the page description\"\n                                onChange={(e) =>\n                                  setpageDescription(e.target.value)\n                                }\n                                value={pageDescription}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <label>Keywords</label>\n                              <input\n                                class=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"use comma for write new Keywords or multiple Keywords\"\n                                onChange={(e) =>\n                                  setpageKeyWords(e.target.value)\n                                }\n                                value={pageKeyWords}\n                              />\n                            </div>\n                            <button\n                              type=\"submit\"\n                              class=\"btn btn-primary me-2\"\n                              onClick={postDataSubmit}\n                              style={{ width: \"13%\" }}\n                            >\n                              Post\n                            </button>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default UpdateScreen;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../components/Sidebar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listCategory } from \"../actions/categoryActions\";\nimport axios from \"axios\";\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nfunction AddRss() {\n  const Navigate = useNavigate();\n   \n  const dispatch = useDispatch();\n\n  const categoryList = useSelector((state) => state.categoryList);\n  const {  categories } = categoryList;\n  const [categoryId, setCategoryId] = useState();\n  const [category, setCategory] = useState();\n  const [url, setUrl] = useState();\n  const [title, setTitle] = useState();\n    useEffect(() => {\n\n        dispatch(listCategory());\n      \n    }, [dispatch]);\n  const categoryIdHandel = (e) => {\n    setCategory(e.target.value);\n\n    const filterCategory =\n      categories &&\n      categories.filter((curElem) => {\n        return curElem.category === e.target.value;\n      });\n    setCategoryId(filterCategory[0]._id);\n  };\n  const [adPostLoad, setadPostLoad] = useState(false);\n\n  const postDataSubmit = async (e) => {\n    setadPostLoad(true)\n    e.preventDefault();\n    const res = await axios.post('/api/rss_feed', {\n      title,\n\n      url,\n      category,\n      categoryId,\n    });\n    if (res) {\n      setadPostLoad(false);\n      setTitle(\"\");\n\n      setCategory(\"\");\n\n      setCategoryId(\"\");\nsetUrl(\"\")\n      Navigate('/admin/addrss');\n    }\n  };\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <div class=\"col-12 grid-margin stretch-card\">\n                    <div class=\"card\">\n                      <div class=\"card-body\">\n                        <h4 class=\"card-title\">Add RSS</h4>\n                        <p class=\"card-description\">All rss details</p>\n                        <form class=\"forms-sample\">\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">Title</label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"Title\"\n                              onChange={(e) => setTitle(e.target.value)}\n                              value={title}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">Rss Url</label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"Url\"\n                              onChange={(e) => setUrl(e.target.value)}\n                              value={url}\n                            />\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label for=\"exampleSelectGender\">Category</label>\n                            <select\n                              class=\"form-control\"\n                              id=\"exampleSelectGender\"\n                              onChange={categoryIdHandel}\n                            >\n                              <option>\n                                {!category ? 'Select the post category' : ''}\n                              </option>\n                              {categories &&\n                                categories.map((elem) => (\n                                  <option>{elem.category}</option>\n                                ))}\n                            </select>\n                          </div>\n\n                          <button\n                            type=\"submit\"\n                            class=\"btn btn-primary me-2\"\n                            onClick={postDataSubmit}\n                            style={{ width: '13%' }}\n                            disabled={adPostLoad}\n                          >\n                            Add\n                          </button>\n                        </form>\n                        <ClipLoader\n                          color=\"skyblue\"\n                          loading={adPostLoad}\n                          size={50}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AddRss;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport { Button, Input } from \"@mui/material\";\nfunction AddUserScreen() {\n  const Navigate = useNavigate();\n\n  const [name, setName] = useState();\n  const [avatar, setAvatar] = useState();\n\n  const [email, setEmail] = useState();\n  const [bio, setBio] = useState();\n  const [professionalName, setProfessionalName] = useState();\n  const [password, setPassword] = useState();\n  const [facebook, setFacebook] = useState();\n  const [twitter, setTwitter] = useState();\n  const [linkedIn, setLinkedIn] = useState();\n\n  const [load, setLoad] = useState();\n  const [adPostLoad, setadPostLoad] = useState(false);\n\n  const postDataSubmit = async (e) => {\n    e.preventDefault();\n    setadPostLoad(true);\n    const res = await axios.post('/api/user/register', {\n      name,\n      email,\n      password,\n      avatar,\n      bio,\n      facebook,\n      twitter,\n      linkedIn,\n      professionalName,\n    });\n\n    if (res) {\n      setadPostLoad(false);\n      setLinkedIn(\"\");\n      setName(\"\");\n      setAvatar(\"\");\n      setEmail(\"\");\n      setProfessionalName(\"\");\n      setPassword(\"\");\n      setFacebook(\"\");\n      setTwitter(\"\");\n      setBio(\"\");\n      Navigate('/admin/add_user');\n    }\n  };\n\n\n    const imageHandler = async (e) => {\n      const file = e.target.files[0];\n      setLoad(true);\n      const formdata = new FormData();\n      formdata.append('file', file);\n      formdata.append('upload_preset', 'thehawk');\n      const res = await axios.post(\n        'https://api.cloudinary.com/v1_1/thehawk/upload',\n        formdata\n      );\n\n      setAvatar(res.data.secure_url);\n      setLoad(false);\n    };\n\n\n  useEffect(() => {\n    setLoad(false);\n  }, []);\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <div className=\"col-12 grid-margin stretch-card\">\n                    <div className=\"card\">\n                      <div className=\"card-body\">\n                        <h4 className=\"card-title\">Add a new user</h4>\n                        <p className=\"card-description\">All Author details</p>\n                        <form className=\"forms-sample\">\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">Name</label>\n                            <input\n                              className=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"name\"\n                              onChange={(e) => setName(e.target.value)}\n                              value={name}\n                            />\n                          </div>\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              Professional Name\n                            </label>\n                            <input\n                              className=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"enter a professional name of that user\"\n                              onChange={(e) =>\n                                setProfessionalName(e.target.value)\n                              }\n                              value={professionalName}\n                            />\n                          </div>\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">email</label>\n                            <input\n                              className=\"form-control\"\n                              type=\"email\"\n                              placeholder=\"email\"\n                              onChange={(e) => setEmail(e.target.value)}\n                              value={email}\n                            />\n                          </div>\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              password\n                            </label>\n                            <input\n                              className=\"form-control\"\n                              type=\"password\"\n                              placeholder=\"password\"\n                              onChange={(e) => setPassword(e.target.value)}\n                              value={password}\n                            />\n                          </div>\n                          <div className=\"mb-2\">Profile Image</div>\n                          {/* <h1>Image uploading {progress}%</h1> */}\n                          <label htmlFor=\"contained-button-file\">\n                            <Input\n                              accept=\"image/*\"\n                              id=\"contained-button-file\"\n                              multiple\n                              type=\"file\"\n                              onChange={imageHandler}\n                              style={{ display: 'none' }}\n                            />\n                            <Button\n                              variant=\"contained\"\n                              component=\"span\"\n                              className=\"mb-2\"\n                            >\n                              Upload\n                            </Button>\n                          </label>\n                          <div className=\"image_previw\">\n                            <ClipLoader\n                              color=\"skyblue\"\n                              loading={load}\n                              size={50}\n                            />\n                            <img\n                              src={avatar}\n                              style={{\n                                'max-width': '80%',\n                                'max-height': '60%',\n                              }}\n                            />\n                          </div>\n\n                          <p className=\"card-description\">About details</p>\n\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">bio</label>\n                            <input\n                              className=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"enter a short bio text of the user.\"\n                              onChange={(e) => setBio(e.target.value)}\n                              value={bio}\n                            />\n                          </div>\n                          <p className=\"card-description\">\n                            <b> Social links</b>#\n                          </p>\n\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              facebook\n                            </label>\n                            <input\n                              className=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"facebook profile link\"\n                              onChange={(e) => setFacebook(e.target.value)}\n                              value={facebook}\n                            />\n                          </div>\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">twitter</label>\n                            <input\n                              className=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"twitter profile link\"\n                              onChange={(e) => setTwitter(e.target.value)}\n                              value={twitter}\n                            />\n                          </div>\n\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              linkedIn\n                            </label>\n                            <input\n                              className=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"linkedIn profile link\"\n                              onChange={(e) => setLinkedIn(e.target.value)}\n                              value={linkedIn}\n                            />\n                          </div>\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-primary me-2\"\n                            onClick={postDataSubmit}\n                            style={{ width: '13%' }}\n                            disabled={adPostLoad}\n                          >\n                            Add\n                          </button>\n                        </form>\n                        <ClipLoader\n                          color=\"skyblue\"\n                          loading={adPostLoad}\n                          size={50}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AddUserScreen;\n","import axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { listRss } from \"../actions/rssActions\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\n\nfunction AllRssScreen() {\n  const dispatch = useDispatch();\n  const rssList = useSelector((state) => state.rssList);\n  const { rss, loading } = rssList;\n  useEffect(() => {\n\n      dispatch(listRss());\n   \n  }, [dispatch]);\n\n  const navigate = useNavigate();\n\n\n  const deleteHandel = async (postId) => {\n    if (postId) {\n      window.alert(\"Are you sure?\");\n      try {\n        const res = await axios.delete(`/api/rss/${postId}`);\n        if (res) {\n           dispatch(listRss());\n          navigate('/admin/all_rss');\n        }\n      } catch (error) {\n      }\n    }\n  };\n  // DE89370400440532013000;\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  {loading === true ? (\n                    <ClipLoader color=\"000\" loading=\"true\" size={54} />\n                  ) : (\n                    <div class=\"col-md-12 grid-margin stretch-card\">\n                      <div class=\"card\">\n                        <div class=\"card-body\">\n                          <h4 class=\"card-title\">All Rss</h4>\n\n                          <div class=\"\">\n                            <table>\n                              <thead>\n                                <tr>\n                                  <th>Rss Title</th>\n                                  <th>Category</th>\n                                  <th>Created At</th>\n\n                                  <th>Actions</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {rss &&\n                                  rss.map((rssData) => (\n                                    <tr>\n                                      <td> {rssData.name}</td>\n                                      <td>{rssData.category.name}</td>\n                                      <td>\n                                        {new Date(\n                                          rssData.createdAt\n                                        ).toDateString()}\n                                      </td>\n\n                                      <td>\n                                        <button\n                                          className=\"btn btn-danger mb-2\"\n                                          style={{ padding: ' 0.875rem 1rem' }}\n                                          onClick={() =>\n                                            deleteHandel(rssData._id)\n                                          }\n                                        >\n                                          Trash\n                                        </button>\n\n                                        <Link\n                                          className=\"btn btn-primary m-1\"\n                                          style={{\n                                            textDecoration: 'none',\n                                            color: '#fff',\n                                            width: '100%',\n                                          }}\n                                          to={`/admin/updaterss/${rssData._id}`}\n                                        >\n                                          Edit\n                                        </Link>\n                                      </td>\n                                    </tr>\n                                  ))}\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AllRssScreen;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { listpost } from '../actions/postActions';\nimport { Link } from 'react-router-dom';\nimport Dialog from '@mui/material/Dialog';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport { allUserAction } from '../actions/userActions';\n\nimport Pagination from '../components/Pagination';\n\nimport dayjs from 'dayjs';\nimport { listCategory } from '../actions/categoryActions';\nimport { listSubCategory } from '../actions/subCategoryAction';\nimport Button from '@mui/material/Button';\n\nimport Slide from '@mui/material/Slide';\nconst isSameOrAfter = require('dayjs/plugin/isSameOrAfter');\nconst isSameOrBefore = require('dayjs/plugin/isSameOrBefore');\n\ndayjs.extend(isSameOrBefore);\ndayjs.extend(isSameOrAfter);\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nfunction AllUsersScreen() {\n  const navigate = useNavigate();\n       \n  const userList = useSelector((state) => state.allUsers);\n  const { loading, users } = userList;\n  const postList = useSelector((state) => state.postList);\n  const { posts } = postList;\n  const [lenghtUser, setLenghtUser] = useState(0);\n  const [open, setOpen] = useState(false);\n\n  const [userId, setUserId] = useState();\n\n  const handleClose = () => {\n    setOpen(false);\n    setSort([]);\n  };\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n      dispatch(allUserAction());\n    \n   \n      dispatch(listpost());\n    \n  }, [dispatch ]);\n\n  const [startingDate, setStartingDate] = useState();\n  const [endingDate, setEndingDate] = useState();\n  const deleteHandel = async (postId) => {\n    if (postId) {\n      window.alert('Are you sure?');\n      try {\n        const res = await axios.delete(`/api/user/${postId}`);\n        if (res.status === 200) {\n          dispatch(allUserAction());\n          navigate('/admin/all_users');\n        }\n      } catch (error) {}\n    }\n  };\n\n  // data\n\n  const [sort, setSort] = useState();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(50);\n  useEffect(() => {\n    dispatch(listpost());\n    dispatch(listCategory());\n    dispatch(listSubCategory());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const sortedData =\n      posts &&\n      posts.sort((a, b) => {\n        const dateAInMillis = new Date(a.createdAt).getTime();\n        const dateBInMillis = new Date(b.createdAt).getTime();\n\n        return dateBInMillis - dateAInMillis;\n      });\n    setSort(sortedData);\n  }, [posts]);\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = sort && sort.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const dateFilter = (date) => {\n   \n\n    const filteredData =\n      posts &&\n      posts.filter((curElem) => {\n        return (\n          dayjs(date).isSame(\n            dayjs(new Date(curElem.createdAt).toDateString())\n          ) === true\n        );\n      });\n\n    setSort(filteredData);\n    if (!date) {\n      const sortedData =\n        posts &&\n        posts.sort((a, b) => {\n          const dateAInMillis = new Date(a.createdAt).getTime();\n          const dateBInMillis = new Date(b.createdAt).getTime();\n\n          return dateBInMillis - dateAInMillis;\n        });\n      setSort(sortedData);\n    }\n  };\n\n  const viewPost = (event) => {\n    setUserId(event);\n    setOpen(true);\n\n    let filteredByUserIdLenght = (\n      posts && posts.filter((curElem) => curElem.author.id === event)\n    ).length;\n    setLenghtUser(filteredByUserIdLenght);\n    const filteredData =\n      posts &&\n      posts.filter((curUserPost) => {\n        return curUserPost.author.id === event;\n      });\n\n    setSort(filteredData);\n  };\n\n  const submitFilterDate = () => {\n    const filteredData =\n      posts &&\n      posts.filter(\n        (curElem) =>\n          dayjs(startingDate).isSameOrBefore(\n            dayjs(new Date(curElem.createdAt).toDateString())\n          ) === true &&\n          dayjs(endingDate).isSameOrAfter(\n            dayjs(new Date(curElem.createdAt).toDateString())\n          ) === true\n      );\n\n    setSort(filteredData);\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  {loading === true ? (\n                    <ClipLoader color=\"000\" loading=\"true\" size={54} />\n                  ) : (\n                    <>\n                      <Dialog\n                        fullScreen\n                        open={open}\n                        onClose={handleClose}\n                        TransitionComponent={Transition}\n                      >\n                        <div className=\"container-fluid \">\n                          <div className=\"main-panel\">\n                            <div className=\"content-wrapper customViewPost\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-12\">\n                                  <div className=\"cloSeButton\">\n                                    <button\n                                      className=\"btn btn-primary\"\n                                      onClick={handleClose}\n                                    >\n                                      close\n                                    </button>\n                                  </div>\n                                  {postList.loading === true ? (\n                                    <ClipLoader\n                                      color=\"000\"\n                                      loading=\"true\"\n                                      size={54}\n                                    />\n                                  ) : (\n                                    <div class=\"col-md-12 grid-margin \">\n                                      <div class=\"card\">\n                                        <div class=\"card-body\">\n                                          {/* <h4 class=\"card-title text-center\">\n                                            his post collection\n                                          </h4> */}\n\n                                          <div className=\"allFilters\">\n                                            <div\n                                              style={{\n                                                display: 'inline-block',\n                                                marginRight: '20px',\n                                              }}\n                                              className=\"filters mb-3 \"\n                                            >\n                                              <span\n                                                style={{ display: 'block' }}\n                                              >\n                                                From\n                                              </span>\n                                              <input\n                                                type=\"date\"\n                                                onChange={(e) =>\n                                                  setStartingDate(\n                                                    e.target.value\n                                                  )\n                                                }\n                                              />\n                                            </div>\n\n                                            <div\n                                              style={{\n                                                display: 'inline-block',\n                                                marginRight: '20px',\n                                              }}\n                                              className=\"filters mb-3\"\n                                            >\n                                              <span\n                                                style={{ display: 'block' }}\n                                              >\n                                                End\n                                              </span>\n                                              <input\n                                                type=\"date\"\n                                                onChange={(e) =>\n                                                  setEndingDate(e.target.value)\n                                                }\n                                              />\n                                            </div>\n                                            <button\n                                              onClick={submitFilterDate}\n                                              style={{\n                                                display: 'inline-block',\n                                                'margin-right': '20px',\n                                                width: '112px',\n                                                padding: '8px',\n                                              }}\n                                              className=\"btn btn-info\"\n                                            >\n                                              Filter\n                                            </button>\n\n                                            <div\n                                              className=\"numberOfPosts\"\n                                              style={{\n                                                display: 'inline-block',\n                                                width: '46%',\n\n                                                textAlign: 'right',\n                                              }}\n                                            >\n                                              <h3>\n                                                {sort && sort.length} Posts\n                                              </h3>\n                                            </div>\n                                          </div>\n                                          <div class=\"\">\n                                            <table>\n                                              <thead>\n                                                <tr>\n                                                  <th>Post Title</th>\n                                                  <th>Posted By</th>\n                                                  <th>Category</th>\n                                                  <th>Sub Category</th>\n\n                                                  <th>Featured</th>\n                                                  <th>Featured Top</th>\n                                                  <th>Posted At</th>\n                                                </tr>\n                                              </thead>\n                                              <tbody>\n                                                {currentPosts &&\n                                                  currentPosts\n                                                    .filter(\n                                                      (curData) =>\n                                                        curData.author.id ===\n                                                        userId\n                                                    )\n                                                    .map((post) => (\n                                                      <tr>\n                                                        <td>\n                                                          {' '}\n                                                          {post.postitle}\n                                                        </td>\n                                                        <td>\n                                                          {post.author.name}\n                                                        </td>\n                                                        <td>\n                                                          {post.category.name}\n                                                        </td>\n                                                        <td>\n                                                          {\n                                                            post.subCategory\n                                                              .name\n                                                          }\n                                                        </td>\n\n                                                        <td>\n                                                          {post.isFetaured ===\n                                                          true\n                                                            ? 'Yes'\n                                                            : 'No'}\n                                                        </td>\n                                                        <td>\n                                                          {post.isFetauredTop ===\n                                                          true\n                                                            ? 'Yes'\n                                                            : 'No'}\n                                                        </td>\n                                                        <td>\n                                                          {new Date(\n                                                            post.createdAt\n                                                          ).toDateString()}\n                                                        </td>\n                                                      </tr>\n                                                    ))}\n                                              </tbody>\n                                            </table>\n                                          </div>\n                                          <Pagination\n                                            postsPerPage={postsPerPage}\n                                            // totalPosts={sort && sort.length}\n                                            totalPosts={\n                                              (\n                                                posts &&\n                                                posts.filter(\n                                                  (curElem) =>\n                                                    curElem.author.id === userId\n                                                )\n                                              ).length\n                                            }\n                                            paginate={paginate}\n                                            // totalPosts=  {(currentPosts &&\n                                            //       currentPosts\n                                            //       .filter((curData)=> curData.author.id===userId)).length> 0 &&(\n                                            //         (currentPosts &&\n                                            //       currentPosts\n                                            //       .filter((curData)=> curData.author.id===userId)).length\n                                            //       ) }\n\n                                            //                 totalPosts={(currentPosts && currentPosts.filter((curData)=> curData.author.id===userId).length>0?(\n                                            //\n                                            //                     (currentPosts&& currentPosts.filter((data)=>data.author.id===userId).length)\n                                            //\n                                            //                 ):(\n                                            //\n                                            //                   (currentPosts&& currentPosts.filter((data)=>data.author.id===userId).length)\n                                            //                 ))}\n                                          />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  )}\n                                  {/* {currentPosts &&\n                                                  currentPosts\n                                                  .filter((curData)=> curData.author.id===userId) */}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </Dialog>\n\n                      <div class=\"col-md-12 grid-margin stretch-card\">\n                        <div class=\"card\">\n                          <div class=\"card-body\">\n                            <h4 class=\"card-title\">All users of thehawk</h4>\n\n                            <div class=\"\">\n                              <table>\n                                <thead>\n                                  <tr>\n                                    <th>Name</th>\n                                    <th>Email</th>\n                                    <th>Administrator</th>\n                                    <th>Author</th>\n                                    <th>Total Post made</th>\n                                    <th>All Posts</th>\n                                    <th>Actions</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {users &&\n                                    users.map((post) => (\n                                      <tr>\n                                        <td>\n                                          {post.name}{' '}\n                                          {post.isAdmin === true\n                                            ? '(Admin)'\n                                            : ''}\n                                        </td>\n                                        <td> {post.email}</td>\n                                        <td>\n                                          {post.isAdmin === true ? 'Yes' : 'No'}{' '}\n                                        </td>\n                                        <td>\n                                          {post.isAuthor === true\n                                            ? 'Yes'\n                                            : 'No'}{' '}\n                                        </td>\n                                        <td>\n                                          {postList.loading === true ? (\n                                            <ClipLoader\n                                              color=\"000\"\n                                              loading=\"true\"\n                                              size={54}\n                                            />\n                                          ) : (\n                                            ''\n                                          )}\n                                          {posts &&\n                                            posts.filter(\n                                              (element) =>\n                                                element.author.id === post._id\n                                            ).length > 0 && (\n                                              <div>\n                                                {posts &&\n                                                  posts.filter(\n                                                    (element) =>\n                                                      element.author.id ===\n                                                      post._id\n                                                  ).length}\n                                              </div>\n                                            )}\n                                          {posts &&\n                                          posts.filter(\n                                            (element) =>\n                                              element.author.id === post._id\n                                          ).length <= 0 ? (\n                                            <div>{'Not made any post yet'}</div>\n                                          ) : (\n                                            ''\n                                          )}\n                                        </td>\n\n                                        <td>\n                                          <Button\n                                            variant=\"contained\"\n                                            className=\" m-1\"\n                                            onClick={() => viewPost(post._id)}\n                                          >\n                                            View\n                                          </Button>\n                                        </td>\n\n                                        <td>\n                                          <button\n                                            className={`btn btn-danger mb-2 ${\n                                              post.isAdmin === true\n                                                ? 'cstm'\n                                                : ''\n                                            }`}\n                                            style={{\n                                              padding: ' 0.875rem 1rem',\n                                            }}\n                                            onClick={() =>\n                                              deleteHandel(post._id)\n                                            }\n                                            disabled={post.isAdmin === true}\n                                          >\n                                            Trash\n                                          </button>\n                                          <Link\n                                            className=\"btn btn-primary m-1\"\n                                            style={{\n                                              textDecoration: 'none',\n                                              color: '#fff',\n                                              width: '100%',\n                                            }}\n                                            to={`/admin/update_users/${post._id}`}\n                                          >\n                                            Edit\n                                          </Link>\n                                        </td>\n                                      </tr>\n                                    ))}\n                                </tbody>\n                              </table>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AllUsersScreen;\n","import axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport { listCategory } from \"../actions/categoryActions\";\nimport { listpost } from \"../actions/postActions\";\n\nfunction AllCategoryScreen() {\n  // const [data, setData] = useState()\n  const categoryList = useSelector((state) => state.categoryList);\n  const { loading, categories } = categoryList;\n  const postList = useSelector((state) => state.postList);\n  const {  posts } = postList;\n  const navigate = useNavigate();\n   \n  const dispatch = useDispatch();\n  useEffect(() => {\n\n      dispatch(listCategory());\n    \n\n\n      dispatch(listpost());\n    \n  }, [dispatch ]);\n\n  const deleteHandel = async (postId) => {\n    if (postId) {\n      window.alert(\"Are you sure?\");\n      try {\n        const res = await axios.delete(`/api/category/${postId}`);\n        if (res) {\n          navigate('/admin/dashboard');\n        }\n      } catch (error) {\n      }\n    }\n  };\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  {loading === true ? (\n                    <ClipLoader color=\"000\" loading=\"true\" size={54} />\n                  ) : (\n                    <div class=\"col-md-12 grid-margin stretch-card\">\n                      <div class=\"card\">\n                        <div class=\"card-body\">\n                          <h4 class=\"card-title\">All news categories</h4>\n\n                          <div class=\"\">\n                            <table>\n                              <thead>\n                                <tr>\n                                  {/* <th>Posted By</th> */}\n                                  {/* <th>Post Id</th> */}\n                                  <th>Category Name</th>\n                                  <th>Add to Menu </th>\n                                  <th>Add to addTop </th>\n                                  <th>Category Text</th>\n                                  <th>Actions</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {categories &&\n                                  categories.map((category) => (\n                                    <tr>\n                                      {/* <td>Someone</td> */}\n                                      {/* <td>{post._id}</td> */}\n                                      <td> {category.category}</td>\n                                      <td>\n                                        {' '}\n                                        {category.addToMenu === true\n                                          ? 'Yes'\n                                          : 'No'}\n                                      </td>\n                                      <td>\n                                        {' '}\n                                        {category.addTop === true\n                                          ? 'Yes'\n                                          : 'No'}\n                                      </td>\n                                      <td>\n                                        {' '}\n                                        {category && category.categoryText\n                                          ? category.categoryText\n                                          : ''}{' '}\n                                      </td>\n                                      <td>\n                                        <button\n                                          className=\"btn btn-danger mb-2\"\n                                          style={{ padding: ' 0.875rem 1rem' }}\n                                          onClick={() =>\n                                            deleteHandel(category._id)\n                                          }\n                                        >\n                                          Trash\n                                        </button>\n\n                                        <Link\n                                          className=\"btn btn-primary m-1\"\n                                          style={{\n                                            textDecoration: 'none',\n                                            color: '#fff',\n                                            width: '100%',\n                                          }}\n                                          to={`/admin/update_category/${category._id}`}\n                                        >\n                                          Edit\n                                        </Link>\n                                      </td>\n                                    </tr>\n                                  ))}\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AllCategoryScreen;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listpost } from \"../actions/postActions\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction AllMedia() {\n      const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n    const postList = useSelector((state) => state.postList);\n    const { loading, posts } = postList;\n  useEffect(() => {\n\n      dispatch(listpost());\n    \n  }, [dispatch]);\n\n\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div class=\"col-md-12 grid-margin stretch-card\">\n                  {loading === true ? (\n                    <ClipLoader color=\"skyblue\" loading=\"true\" size={54} />\n                  ) : (\n                    <div class=\"card\">\n                      <div class=\"card-body\">\n                        {posts &&\n                          posts.map((curElem) => (\n                            <>\n                              <img\n                                className=\"m-3\"\n                                src={curElem.img}\n                                alt=\"\"\n                                height=\"100px\"\n                                width=\"100px\"\n                              />\n                            </>\n                          ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AllMedia;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport { Button, Input } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allUserAction } from \"../actions/userActions\";\nfunction UpdateUserScreen() {\n    const Navigate = useNavigate();\n \n\n  const [name, setName] = useState();\n  const [avatar, setAvatar] = useState();\n  const [email, setEmail] = useState();\n  const [bio, setBio] = useState();\n  const [professionalName, setProfessionalName] = useState();\n  const [password, setPassword] = useState();\n  const [facebook, setFacebook] = useState();\n  const [twitter, setTwitter] = useState();\n  const [linkedIn, setLinkedIn] = useState();\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.allUsers);\n  const {  users } = userList;\n  useEffect(() => {\n\n      dispatch(allUserAction());\n    \n  }, [dispatch ]);\n\n  const id = useParams();\n\n  useEffect(() => {\n    const upDateAblePost =\n      users &&\n      users.filter((curElem) => {\n        return curElem._id === id.id;\n      });\n    const data = upDateAblePost && upDateAblePost[0];\n    setName(data && data.name);\n\n    setAvatar(data && data.avatar);\n\n    setLinkedIn(data &&data.socilaLinks &&  data.socilaLinks.linkedIn &&data.socilaLinks.linkedIn );\n    setEmail(data && data.email);\n    setProfessionalName(data && data.professionalName);\n    setPassword(data && data.password);\n    setFacebook(data && data.socilaLinks && data.socilaLinks.facebook);\n    setTwitter(data && data.socilaLinks && data.socilaLinks.twitter);\n    setBio(data && data.bio);\n\n  }, [users, id.id]);\n\n  const [load, setLoad] = useState();\n  const postDataSubmit = async (e) => {\n    e.preventDefault();\n    const res = await axios.patch(`/api/user/${id.id}`, {\n      name,\n      email,\n      password,\n      avatar,\n      bio,\n      facebook,\n      twitter,\n      linkedIn,\n      professionalName,\n    });\n\n    if (res.status === 200) {\n      setLinkedIn(\"\");\n      setName(\"\");\n      setPassword(\"\");\n      setAvatar(\"\");\n      setEmail(\"\");\n      setProfessionalName(\"\");\n      setPassword(\"\");\n      setFacebook(\"\");\n      setTwitter(\"\");\n      setBio(\"\");\n      Navigate('/admin/all_users');\n    }\n  };\n   const imageHandler = async (e) => {\n     const file = e.target.files[0];\n     setLoad(true);\n     const formdata = new FormData();\n     formdata.append('file', file);\n     formdata.append('upload_preset', 'thehawk');\n     const res = await axios.post(\n       'https://api.cloudinary.com/v1_1/thehawk/upload',\n       formdata\n     );\n\n     setAvatar(res.data.secure_url);\n     setLoad(false);\n   };\n\n\n  useEffect(() => {\n    setLoad(false);\n  }, []);\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <div className=\"col-12 grid-margin stretch-card\">\n                    <div className=\"card\">\n                      <div className=\"card-body\">\n                        <h4 className=\"card-title\">Add a new user</h4>\n                        <p className=\"card-description\">All Author details</p>\n                        <form className=\"forms-sample\">\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">Name</label>\n                            <input\n                              className=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"name\"\n                              onChange={(e) => setName(e.target.value)}\n                              value={name}\n                            />\n                          </div>\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              Professional Name\n                            </label>\n                            <input\n                              className=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"enter a professional name of that user\"\n                              onChange={(e) =>\n                                setProfessionalName(e.target.value)\n                              }\n                              value={professionalName}\n                            />\n                          </div>\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">email</label>\n                            <input\n                              className=\"form-control\"\n                              type=\"email\"\n                              placeholder=\"email\"\n                              onChange={(e) => setEmail(e.target.value)}\n                              value={email}\n                            />\n                          </div>\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              password\n                            </label>\n                            <input\n                              className=\"form-control\"\n                              type=\"password\"\n                              placeholder=\"password\"\n                              onChange={(e) => setPassword(e.target.value)}\n                              value={password}\n                            />\n                          </div>\n                          <div className=\"mb-2\">Profile Image</div>\n                          {/* <h1>Image uploading {progress}%</h1> */}\n                          <label htmlFor=\"contained-button-file\">\n                            <Input\n                              accept=\"image/*\"\n                              id=\"contained-button-file\"\n                              multiple\n                              type=\"file\"\n                              onChange={imageHandler}\n                              style={{ display: \"none\" }}\n                            />\n                            <Button\n                              variant=\"contained\"\n                              component=\"span\"\n                              className=\"mb-2\"\n                            >\n                              Upload\n                            </Button>\n                          </label>\n                          <div className=\"image_previw\">\n                            <ClipLoader\n                              color=\"skyblue\"\n                              loading={load}\n                              size={50}\n                            />\n                            <img\n                              src={avatar}\n                              style={{\n                                \"max-width\": \"80%\",\n                                \"max-height\": \"60%\",\n                              }}\n                            />\n                          </div>\n\n                          <p className=\"card-description\">About details</p>\n\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">bio</label>\n                            <input\n                              className=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"enter a short bio text of the user.\"\n                              onChange={(e) => setBio(e.target.value)}\n                              value={bio}\n                            />\n                          </div>\n                          <p className=\"card-description\">\n                            <b> Social links</b>#\n                          </p>\n\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              facebook\n                            </label>\n                            <input\n                              className=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"facebook profile link\"\n                              onChange={(e) => setFacebook(e.target.value)}\n                              value={facebook}\n                            />\n                          </div>\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">twitter</label>\n                            <input\n                              className=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"twitter profile link\"\n                              onChange={(e) => setTwitter(e.target.value)}\n                              value={twitter}\n                            />\n                          </div>\n\n                          <div className=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              linkedIn\n                            </label>\n                            <input\n                              className=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"linkedIn profile link\"\n                              onChange={(e) => setLinkedIn(e.target.value)}\n                              value={linkedIn}\n                            />\n                          </div>\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-primary me-2\"\n                            onClick={postDataSubmit}\n                            style={{ width: \"13%\" }}\n                          >\n                            Update\n                          </button>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default UpdateUserScreen;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Sidebar from \"../components/Sidebar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listCategory } from \"../actions/categoryActions\";\nimport axios from \"axios\";\nimport { listRss } from \"../actions/rssActions\";\n\nfunction UpdateRssScreen() {\n  const Navigate = useNavigate();\n         \n  const dispatch = useDispatch();\n    const categoryList = useSelector((state) => state.categoryList);\n    const { categories } = categoryList;\n    const rssDataList = useSelector((state) => state.rssList);\n    const { rss } = rssDataList;\n  useEffect(() => {\n \n      dispatch(listCategory());\n    \n  }, [dispatch ]);\n\n\n  const [categoryId, setCategoryId] = useState();\n  const [category, setCategory] = useState();\n  const [url, setUrl] = useState();\n  const [title, setTitle] = useState();\n  useEffect(() => {\n\n      dispatch(listRss());\n    \n  }, [dispatch ]);\n\n\n  const id = useParams();\n\n  const categoryIdHandel = (e) => {\n    setCategory(e.target.value);\n\n    const filterCategory =\n      categories &&\n      categories.filter((curElem) => {\n        return curElem.category === e.target.value;\n      });\n    setCategoryId(filterCategory[0]._id);\n  };\n\n  const postDataSubmit = async (e) => {\n    e.preventDefault();\n    const res = await axios.patch(`/api/rss/${id.id}`, {\n      title,\n\n      url,\n      category,\n      categoryId,\n    });\n    if (res.status === 200) {\n      setTitle(\"\");\n\n      setCategory(\"\");\n\n      setCategoryId(\"\");\ndispatch(listRss());\n      Navigate('/admin/all_rss');\n    }\n  };\n  useEffect(() => {\n    const upDateAblePost =\n      rss &&\n      rss.filter((curElem) => {\n        return curElem._id === id.id;\n      });\n    const data = upDateAblePost && upDateAblePost[0];\n    setTitle(data && data.name);\n\n    setCategory(data && data.category.name);\n\n    setCategoryId(data && data.category.id);\n    setUrl(data && data.rssUrl);\n  }, [rss, id.id]);\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <div class=\"col-12 grid-margin stretch-card\">\n                    <div class=\"card\">\n                      <div class=\"card-body\">\n                        <h4 class=\"card-title\">Add RSS</h4>\n                        <p class=\"card-description\">All rss details</p>\n                        <form class=\"forms-sample\">\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">Title</label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"Title\"\n                              onChange={(e) => setTitle(e.target.value)}\n                              value={title}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">Rss Url</label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"Url\"\n                              onChange={(e) => setUrl(e.target.value)}\n                              value={url}\n                            />\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label for=\"exampleSelectGender\">Category</label>\n                            <select\n                              class=\"form-control\"\n                              id=\"exampleSelectGender\"\n                              onChange={categoryIdHandel}\n                              value={category}\n                            >\n                              <option>\n                                {!category ? \"Select the post category\" : \"\"}\n                              </option>\n                              {categories &&\n                                categories.map((elem) => (\n                                  <option>{elem.category}</option>\n                                ))}\n                            </select>\n                          </div>\n\n                          <button\n                            type=\"submit\"\n                            class=\"btn btn-primary me-2\"\n                            onClick={postDataSubmit}\n                            style={{ width: \"13%\" }}\n                          >\n                            Update\n                          </button>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default UpdateRssScreen;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listCategory } from '../actions/categoryActions';\nfunction UpdateCategoryScreen() {\n  const navigate = useNavigate();\n       \n  const categoryList = useSelector((state) => state.categoryList);\n  const { categories } = categoryList;\n  const dispatch = useDispatch();\n  useEffect(() => {\n\n      dispatch(listCategory());\n    \n  }, [dispatch ]);\n\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [pageTitle, setPageTitle] = useState('');\n  const [pageKeywords, setPageKeywords] = useState('');\n  const [image, setImage] = useState('');\n  const [addTop, setaddTop] = useState(false);\n\n  const [addToMenu, setAddToMenu] = useState(false);\n  const [blueSection, setBlueSection] = useState();\n  const [isGridSection, setIsGridSection] = useState();\n  const [addToComminSection, setAddToComminSection] = useState();\n  const [isPlainSection, setIsPlainSection] = useState();\n  const [gridWithWizard, setGridWithWizard] = useState();\n  const [isVideoSection, setIsVideoSection] = useState();\n\n  const id = useParams();\n\n  useEffect(() => {\n    const upDateAblePost =\n      categories &&\n      categories.filter((curElem) => {\n        return curElem._id === id.id;\n      });\n    const data = upDateAblePost && upDateAblePost[0];\n    setTitle(data && data.category);\n    setText(data && data.categoryText);\n    setImage(data && data.categoryImg);\n    setaddTop(data && data.addTop);\n    setAddToMenu(data && data.addToMenu);\n    setBlueSection(data && data.isblueSection);\n\n    setIsGridSection(data && data.isGridSection);\n\n    setAddToComminSection(data && data.addToComminSection);\n    setIsPlainSection(data && data.isPlainSection);\n    setGridWithWizard(data && data.gridWithWizard);\n    setIsVideoSection(data && data.isVideoSection);\n    setPageTitle(data && data.categoryPageTitle);\n    setPageKeywords(data && data.categoryPageKeyWords);\n  }, [categories, id.id]);\n\n  const categoryDataSubmit = async (e) => {\n    e.preventDefault();\n    const res = await axios.patch(`/api/category/${id.id}`, {\n      title,\n      text,\n      image,\n      addTop,\n      addToMenu,\n      blueSection,\n      isGridSection,\n      addToComminSection,\n      isPlainSection,\n      gridWithWizard,\n      isVideoSection,\n      pageTitle,\n      pageKeywords,\n    });\n    if (res.status === 200) {\n      setTitle('');\n      setText('');\n      setImage('');\n      setaddTop(false);\n      setAddToMenu(false);\n      setBlueSection(false);\n      setIsGridSection(false);\n      setAddToComminSection(false);\n      setIsPlainSection(false);\n      setGridWithWizard(false);\n      setIsVideoSection(false);\n      setPageTitle('');\n      setPageKeywords('');\n      navigate('/admin/all_category');\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <div class=\"col-12 grid-margin stretch-card\">\n                    <div class=\"card\">\n                      <div class=\"card-body\">\n                        <h4 class=\"card-title\">Update the category</h4>\n                        <p class=\"card-description\">All catrgory details</p>\n                        <form class=\"forms-sample\">\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              Category\n                            </label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"Title\"\n                              onChange={(e) => setTitle(e.target.value)}\n                              value={title}\n                            />\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              Page title\n                            </label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"enter page title\"\n                              onChange={(e) => setPageTitle(e.target.value)}\n                              value={pageTitle}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              Page keywords\n                            </label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"use comma to type multiple keywords\"\n                              onChange={(e) => setPageKeywords(e.target.value)}\n                              value={pageKeywords}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlTextarea1\">\n                              Page description\n                            </label>\n                            <textarea\n                              class=\"form-control\"\n                              id=\"exampleFormControlTextarea1\"\n                              rows=\"3\"\n                              onChange={(e) => setText(e.target.value)}\n                              value={text}\n                            ></textarea>\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isfetaured\">Add to menu</label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) => setAddToMenu(e.target.checked)}\n                              checked={addToMenu}\n                            />\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isTopfetaured\">\n                              Add to GridSection\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isTopfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) =>\n                                setIsGridSection(e.target.checked)\n                              }\n                              checked={isGridSection}\n                            />\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isTopfetaured\">\n                              Add to add To Common Section\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isTopfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) =>\n                                setAddToComminSection(e.target.checked)\n                              }\n                              checked={addToComminSection}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isTopfetaured\">\n                              Add to Plain Section\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isTopfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) =>\n                                setIsPlainSection(e.target.checked)\n                              }\n                              checked={isPlainSection}\n                            />\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isTopfetaured\">\n                              Add to video Section\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isTopfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) =>\n                                setIsVideoSection(e.target.checked)\n                              }\n                              checked={isVideoSection}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isTopfetaured\">\n                              Add to grid with wizard\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isTopfetaured\"\n                              type=\"checkbox\"\n                              onChange={(e) =>\n                                setGridWithWizard(e.target.checked)\n                              }\n                              checked={gridWithWizard}\n                            />\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label htmlFor=\"isRight\">\n                              Is blusection Category?\n                            </label>\n                            <input\n                              style={{\n                                height: '28px',\n                                width: '18px',\n                                display: 'block',\n                              }}\n                              id=\"isRight\"\n                              type=\"checkbox\"\n                              onChange={(e) => setBlueSection(e.target.checked)}\n                              checked={blueSection}\n                            />\n                          </div>\n                          <button\n                            type=\"submit\"\n                            class=\"btn btn-primary me-2\"\n                            onClick={categoryDataSubmit}\n                            style={{ width: '13%' }}\n                          >\n                            update\n                          </button>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default UpdateCategoryScreen;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { styled } from \"@mui/material/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listCategory } from \"../actions/categoryActions\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport { listSubCategory } from \"../actions/subCategoryAction\";\nfunction UpdateSubCategoryScreen() {\n      const navigate = useNavigate();\n \n\n\n  const [category, setCategory] = useState(\"\");\n\n\n  const [title, setTitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [pageTitle, setPageTitle] = useState(\"\");\n  const [pageKeywords, setPageKeywords] = useState(\"\");\n  const dispatch = useDispatch();\n    const subCategoryList = useSelector((state) => state.subCategoryList);\n    const { subCategories } = subCategoryList;\n      const categoryList = useSelector((state) => state.categoryList);\n      const { categories } = categoryList;\n  useEffect(() => {\n  \n      dispatch(listCategory());\n    \n   \n      dispatch(listSubCategory());\n    \n  }, [dispatch ]);\n\n  const [categoryId, setCategoryId] = useState(\"\");\n\n\n\n  const id = useParams();\n  const categoryIdHandel = (e) => {\n    setCategory(e.target.value);\n    const filterCategory =\n      categories &&\n      categories.filter((curElem) => {\n        return curElem.category === e.target.value;\n      });\n\n    setCategoryId(filterCategory[0]._id);\n  };\n  useEffect(() => {\n    const upDateAblePost =\n      subCategories &&\n      subCategories.filter((curElem) => {\n        return curElem._id === id.id;\n      });\n    const data = upDateAblePost && upDateAblePost[0];\n    setTitle(data && data.subCategoryName);\n    setCategoryId(data && data.categoryId);\n    setCategory(data && data.category);\n    setPageTitle(data && data.subCategoryPageTitle);\n    setText(data && data.subCategoryText);\n    setPageKeywords(data && data.subCategoryPageKeyWords);\n  }, [subCategories, id.id, category]);\n\n\n  const categoryDataSubmit = async (e) => {\n    e.preventDefault();\n    const res = await axios.patch(`/api/subCategory/${id.id}`, {\n      title,\n      category,\n      categoryId,\n      pageTitle,\n      pageKeywords,\n      text\n    });\n    if (res.status === 200) {\n      navigate('/admin/all/sub_category');\n    }\n  };\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <div class=\"col-12 grid-margin stretch-card\">\n                    <div class=\"card\">\n                      <div class=\"card-body\">\n                        <h4 class=\"card-title\">Add Sub category</h4>\n\n                        <form class=\"forms-sample\">\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">Title</label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"Title\"\n                              onChange={(e) => setTitle(e.target.value)}\n                              value={title}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              Page title\n                            </label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"enter page title\"\n                              onChange={(e) => setPageTitle(e.target.value)}\n                              value={pageTitle}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlFile1\">\n                              Page keywords\n                            </label>\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"use comma to type multiple keywords\"\n                              onChange={(e) => setPageKeywords(e.target.value)}\n                              value={pageKeywords}\n                            />\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleFormControlTextarea1\">\n                              Page description\n                            </label>\n                            <textarea\n                              class=\"form-control\"\n                              id=\"exampleFormControlTextarea1\"\n                              rows=\"3\"\n                              onChange={(e) => setText(e.target.value)}\n                              value={text}\n                            ></textarea>\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"exampleSelectGender\">Category</label>\n                            <select\n                              class=\"form-control\"\n                              id=\"exampleSelectGender\"\n                              onChange={categoryIdHandel}\n                              value={category}\n                            >\n                              <option>\n                                {!category ? \"Select the  category\" : \"\"}\n                                {category && !categoryId\n                                  ? \"Select the  category\"\n                                  : \"\"}\n                              </option>\n                              {categories &&\n                                categories.map((elem) => (\n                                  <option>{elem.category}</option>\n                                ))}\n                            </select>\n                          </div>\n\n                          <button\n                            type=\"submit\"\n                            class=\"btn btn-primary me-2\"\n                            onClick={categoryDataSubmit}\n                            style={{ width: \"13%\" }}\n                          >\n                            Update\n                          </button>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default UpdateSubCategoryScreen;\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport { listCategory } from \"../actions/categoryActions\";\nimport { listpost } from \"../actions/postActions\";\nimport { listSubCategory } from \"../actions/subCategoryAction\";\n\nfunction AllSubCategoryScreen() {\n  const navigate = useNavigate();\n        \n  // const [data, setData] = useState()\n  const categoryList = useSelector((state) => state.categoryList);\n  const {  categories } = categoryList;\n  // const postList = useSelector((state) => state.postList);\n  // const {  posts } = postList;\n\n  const dispatch = useDispatch();\n    const subCategoryList = useSelector((state) => state.subCategoryList);\n  const {loading, subCategories } = subCategoryList;\n  useEffect(() => {\n\n      dispatch(listSubCategory());\n  \n  }, [dispatch ]);\n\n  const deleteHandel = async (postId) => {\n    if (postId) {\n      window.alert(\"Are you sure?\");\n      try {\n        const res = await axios.delete(`/api/subCategory/${postId}`);\n        if (res) {\n          navigate('/admin/all/sub_category');\n        }\n      } catch (error) {\n      }\n    }\n  };\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  {loading === true ? (\n                    <ClipLoader color=\"000\" loading=\"true\" size={54} />\n                  ) : (\n                    <div class=\"col-md-12 grid-margin stretch-card\">\n                      <div class=\"card\">\n                        <div class=\"card-body\">\n                          <h4 class=\"card-title\">All news Sub Categories</h4>\n\n                          <div class=\"\">\n                            <table>\n                              <thead>\n                                <tr>\n                                  {/* <th>Posted By</th> */}\n                                  {/* <th>Post Id</th> */}\n                                  <th> Sub Category Name</th>\n                                  <th>Parent Category</th>\n                                  <th>Created At</th>\n\n                                  <th>Actions</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {subCategories &&\n                                  subCategories.map((category) => (\n                                    <tr>\n                                      {/* <td>Someone</td> */}\n                                      {/* <td>{post._id}</td> */}\n                                      <td> {category.subCategoryName}</td>\n                                      <td>{category.category} </td>\n                                      <td>\n                                        {new Date(\n                                          category.createdAt\n                                        ).toDateString()}{' '}\n                                      </td>\n                                      <td>\n                                        <button\n                                          className=\"btn btn-danger mb-2\"\n                                          style={{ padding: ' 0.875rem 1rem' }}\n                                          onClick={() =>\n                                            deleteHandel(category._id)\n                                          }\n                                        >\n                                          Trash\n                                        </button>\n\n                                        <Link\n                                          className=\"btn btn-primary m-1\"\n                                          style={{\n                                            textDecoration: 'none',\n                                            color: '#fff',\n                                            width: '100%',\n                                          }}\n                                          to={`/admin/update_subcategory/${category._id}`}\n                                        >\n                                          Edit\n                                        </Link>\n                                      </td>\n                                    </tr>\n                                  ))}\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AllSubCategoryScreen;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { listpost } from \"../actions/postActions\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"../components/Pagination\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport dayjs from \"dayjs\";\nimport { listCategory } from \"../actions/categoryActions\";\nimport { listSubCategory } from \"../actions/subCategoryAction\";\nfunction AllPostScreenForAuthor() {\n  const [userData, setUserData] = useState();\n  let [hasMore, sethasMore] = useState(true);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUserData(user);\n  }, []);\n\n  const [sort, setSort] = useState();\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(25);\n\n  const postList = useSelector((state) => state.postList);\n  const { loading, error, posts } = postList;\n  const categoryList = useSelector((state) => state.categoryList);\n  const { categories } = categoryList;\n  const subCategoryList = useSelector((state) => state.subCategoryList);\n  const { subCategories } = subCategoryList;\n\n    useEffect(() => {\n    \n        dispatch(listpost());\n      \n     \n        dispatch(listCategory());\n      \n        dispatch(listSubCategory());\n      \n    }, [dispatch]);\n  const deleteHandel = async (postId) => {\n    if (postId) {\n      try {\n        window.alert(\"Are you sure?\");\n        const res = await axios.delete(`/api/post/${postId}`);\n        if (res) {\n          dispatch(listpost());\n          // navigate(\"/\");\n        }\n      } catch (error) {\n      }\n    }\n  };\n  useEffect(() => {\n \n    const sortedData =\n      posts &&\n      posts\n     \n      .filter(\n        (curData) =>\n        userData &&userData._id && curData.author.id === userData._id\n      )\n      .sort((a, b) => {\n        const dateAInMillis = new Date(a.createdAt).getTime();\n        const dateBInMillis = new Date(b.createdAt).getTime();\n\n        return dateBInMillis - dateAInMillis;\n      });\n    setSort(sortedData);\n  }, [posts,userData]);\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = sort && sort.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const dateFilter = (date) => {\n    const filteredData =\n      posts &&\n      posts\n      .filter(\n        (curData) =>\n          userData._id === curData.author.id\n      )\n      .filter((curElem) => {\n        return (\n          dayjs(date).isSame(\n            dayjs(new Date(curElem.createdAt).toDateString())\n          ) === true\n        );\n      });\n\n\n    setSort(filteredData);\n    if (!date) {\n      const sortedData =\n        posts &&\n        posts\n        .filter(\n          (curData) =>\n            userData._id === curData.author.id\n        )\n        .sort((a, b) => {\n          const dateAInMillis = new Date(a.createdAt).getTime();\n          const dateBInMillis = new Date(b.createdAt).getTime();\n\n          return dateBInMillis - dateAInMillis;\n        });\n      setSort(sortedData);\n    }\n  };\n  const categoryHandler = (category) => {\n    if (category === \"All\") {\n\n      const sortedData =\n        posts &&\n        posts\n        .filter(\n          (curData) =>\n            userData._id === curData.author.id\n        )\n        .sort((a, b) => {\n          const dateAInMillis = new Date(a.createdAt).getTime();\n          const dateBInMillis = new Date(b.createdAt).getTime();\n\n          return dateBInMillis - dateAInMillis;\n        });\n      setSort(sortedData);\n    } else {\n      const filteredData =\n        posts &&\n        posts.filter((elem) => {\n          return elem.category.name === category;\n        });\n      setSort(filteredData);\n    }\n  };\n\n  const subCategoryHandel = (subCategory) => {\n    if (subCategory === \"All\") {\n\n      const sortedData =\n        posts &&\n        posts\n        .filter(\n          (curData) =>\n            userData._id === curData.author.id\n        )\n        .sort((a, b) => {\n          const dateAInMillis = new Date(a.createdAt).getTime();\n          const dateBInMillis = new Date(b.createdAt).getTime();\n\n          return dateBInMillis - dateAInMillis;\n        });\n      setSort(sortedData);\n    } else {\n      const filteredData =\n        posts &&\n        posts.filter((elem) => {\n          return elem.subCategory.name === subCategory;\n        });\n      setSort(filteredData);\n    }\n  };\n  return (\n    <>\n      <Header />\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper\">\n          <Sidebar />\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  {loading === true ? (\n                    <ClipLoader color=\"000\" loading=\"true\" size={54} />\n                  ) : (\n                    <div class=\"col-md-12 grid-margin stretch-card\">\n                      <div class=\"card\">\n                        <div class=\"card-body\">\n                          <h4 class=\"card-title text-center\">\n                            All post collection\n                          </h4>\n\n                          <div className=\"allFilters\">\n                            <div\n                              style={{\n                                display: 'inline-block',\n                                marginRight: '100px',\n                                float: 'left',\n                              }}\n                              className=\"filters mb-3\"\n                            >\n                              <span style={{ display: 'block' }}>\n                                {' '}\n                                Filter by Date\n                              </span>\n                              <input\n                                type=\"date\"\n                                onChange={(e) => dateFilter(e.target.value)}\n                              />\n                            </div>\n\n                            <div\n                              style={{\n                                display: 'inline-block',\n                                marginLeft: '10px',\n                              }}\n                              className=\"filters mb-3\"\n                            >\n                              <span style={{ display: 'block' }}>\n                                {' '}\n                                Filter by Category\n                              </span>\n                              <select\n                                onChange={(e) =>\n                                  categoryHandler(e.target.value)\n                                }\n                                className=\"form-control\"\n                                name=\"\"\n                                id=\"\"\n                                style={{ width: '100%' }}\n                              >\n                                <option value=\"All\">All</option>\n                                {categories &&\n                                  categories.map((category) => (\n                                    <option value={category.category}>\n                                      {category.category}\n                                    </option>\n                                  ))}\n                              </select>\n                            </div>\n                            <div\n                              style={{\n                                display: 'inline-block',\n                                marginLeft: '10px',\n                                float: 'right',\n                              }}\n                              className=\"filters mb-3\"\n                            >\n                              <span style={{ display: 'block' }}>\n                                {' '}\n                                Filter by SubCategory\n                              </span>\n                              <select\n                                onChange={(e) =>\n                                  subCategoryHandel(e.target.value)\n                                }\n                                className=\"form-control\"\n                                name=\"\"\n                                id=\"\"\n                                style={{ width: '100%' }}\n                              >\n                                <option value=\"All\">All</option>\n                                {subCategories &&\n                                  subCategories.map((subCategory) => (\n                                    <option value={subCategory.subCategoryName}>\n                                      {subCategory.subCategoryName}\n                                    </option>\n                                  ))}\n                              </select>\n                            </div>\n                          </div>\n                          <div class=\"\">\n                            <table>\n                              <thead>\n                                <tr>\n                                  <th>Post Title</th>\n                                  <th>Post Image</th>\n                                  <th>Posted By</th>\n                                  <th>Category</th>\n                                  <th>Sub Category</th>\n\n                                  <th>Featured</th>\n                                  <th>Featured Top</th>\n                                  <th>Posted At</th>\n\n                                  <th>Actions</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {currentPosts &&\n                                  currentPosts\n                                    .filter(\n                                      (curData) =>\n                                        userData._id === curData.author.id\n                                    )\n                                    .map((post) => (\n                                      <tr>\n                                        <td> {post.postitle}</td>\n                                        <td>\n                                          <img\n                                            src={post.img}\n                                            height=\"100px\"\n                                            width=\"100px\"\n                                          />\n                                        </td>\n                                        <td>\n                                          {post &&\n                                            post.author &&\n                                            post.author.name &&\n                                            post.author.name}\n                                        </td>\n                                        <td>\n                                          {post &&\n                                            post.category &&\n                                            post.category.name &&\n                                            post.category.name}\n                                        </td>\n                                        <td>\n                                          {post &&\n                                            post.subCategory &&\n                                            post.subCategory.name &&\n                                            post.subCategory.name}\n                                        </td>\n\n                                        <td>\n                                          {' '}\n                                          {post.isFetaured === true\n                                            ? 'Yes'\n                                            : 'No'}\n                                        </td>\n                                        <td>\n                                          {' '}\n                                          {post.isFetauredTop === true\n                                            ? 'Yes'\n                                            : 'No'}\n                                        </td>\n                                        <td>\n                                          {' '}\n                                          {new Date(\n                                            post.createdAt\n                                          ).toDateString()}\n                                        </td>\n\n                                        <td>\n                                          <button\n                                            className=\"btn btn-danger mb-2\"\n                                            style={{\n                                              padding: ' 0.875rem 1rem',\n                                            }}\n                                            onClick={() =>\n                                              deleteHandel(post._id)\n                                            }\n                                          >\n                                            Trash\n                                          </button>\n\n                                          <Link\n                                            className=\"btn btn-primary m-1\"\n                                            style={{\n                                              textDecoration: 'none',\n                                              color: '#fff',\n                                              width: '100%',\n                                            }}\n                                            to={`/admin/updateposts/${post._id}`}\n                                          >\n                                            Edit\n                                          </Link>\n                                        </td>\n                                      </tr>\n                                    ))}\n                              </tbody>\n                            </table>\n                          </div>\n                          <Pagination\n                            postsPerPage={postsPerPage}\n                            totalPosts={sort && sort.length}\n                            paginate={paginate}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AllPostScreenForAuthor;\n","import React from 'react'\n\nfunction ErrorPage() {\n  return (\n    <div>\n        \n        404.... Page not found\n    </div>\n  )\n}\n\nexport default ErrorPage","import React, { useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport CloudDownloadIcon from \"@mui/icons-material/CloudDownload\";\r\nimport RestoreIcon from \"@mui/icons-material/Restore\";\r\nimport axios from \"axios\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Alert from '@mui/material/Alert';\r\n\r\nexport default function BackupAndRestore() {\r\n  const [restoreinput, setrestoreinput] = useState(false);\r\n\r\n  const [databaseFile, setdatabaseFile] = useState();\r\n  const [restoreLoading, setrestoreLoading] = useState(false)\r\n  const [restoreSuccess, setrestoreSuccess] = useState(false)\r\n  const restore = async () => {\r\n    if (!databaseFile) return;\r\n    setrestoreLoading(true)\r\n    console.log(databaseFile);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"database\", databaseFile);\r\n\r\n    const res = await axios.post(\"/api/restore/backup\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n\r\n    if (res.status ===200) {\r\n      setrestoreLoading(false)\r\n      setrestoreSuccess(true)\r\n      setTimeout(() => {\r\n        window.location.reload()\r\n      } , 2000)\r\n    }\r\n  };\r\n  const [downloadLink, setdownloadLink] = useState(\"\");\r\n  const [downloadAble, setdownloadAble] = useState(false);\r\n  const [backupLoading, setbackupLoading] = useState(false);\r\n\r\n  const backup = async () => {\r\n    setbackupLoading(true);\r\n    const res = await axios.post(\"/api/restore/download\", {});\r\n\r\n    if (res.data.path) {\r\n      setbackupLoading(false);\r\n      setdownloadLink(res.data.path);\r\n      setdownloadAble(true);\r\n    }\r\n  };\r\n\r\n  const download = () => {\r\n    window.open(downloadLink);\r\n  };\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container-scroller\">\r\n        <div className=\"container-fluid page-body-wrapper\">\r\n          <Sidebar />\r\n          <div className=\"main-panel\">\r\n            <div className=\"content-wrapper\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                  <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                      {/* <h4 class=\"card-title\">All news categories</h4> */}\r\n                      <div className=\"col-sm-9 \">\r\n                        <div\r\n                          style={{\r\n                            maxWidth: \"20%\",\r\n                            margin: \"0 auto\",\r\n                          }}\r\n                        >\r\n                          <button\r\n                            disabled={backupLoading}\r\n                            onClick={backup}\r\n                            type=\"button\"\r\n                            className=\"btn  btn-primary\"\r\n                          >\r\n                            {backupLoading ? (\r\n                              <>\r\n                                <ClipLoader loading={backupLoading} />\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                Backup <CloudDownloadIcon />\r\n                              </>\r\n                            )}\r\n                          </button>\r\n                          {downloadAble ? (\r\n                            <>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"btn  mt-2 btn-info\"\r\n                                onClick={download}\r\n                              >\r\n                                Download\r\n                              </button>\r\n                            </>\r\n                          ) : null}\r\n\r\n                          <button\r\n                            onClick={() =>\r\n                              setrestoreinput((previousState) => !previousState)\r\n                            }\r\n                            type=\"button\"\r\n                            className=\"btn mt-5 btn-primary\"\r\n                            disabled={restoreLoading}\r\n                          >\r\n                            {\r\n                              restoreLoading? <>\r\n                                <ClipLoader loading={restoreLoading} />\r\n                              </> : <>\r\n                                 Restore <RestoreIcon />\r\n                              </>\r\n                            }\r\n                         \r\n                          </button>\r\n                          {restoreinput ? (\r\n                            <>\r\n                              <div className=\"mt-5\">\r\n                                <input\r\n                                  accept=\".gzip\"\r\n                                  onChange={(e) =>\r\n                                    setdatabaseFile(e.target.files[0])\r\n                                  }\r\n                                  type={\"file\"}\r\n                                />\r\n                                <button\r\n                                     disabled={restoreLoading}\r\n                                  onClick={restore}\r\n                                  type=\"button\"\r\n                                  className=\"btn mt-5 btn-dark\"\r\n                                >\r\n                                  {\r\n                              restoreLoading? <>\r\n                                <ClipLoader loading={restoreLoading} />\r\n                              </> : <>\r\n                              Push Database\r\n                              </>\r\n                            }\r\n                                 \r\n                                </button>\r\n                              </div>\r\n                            </>\r\n                          ) : null}\r\n                    \r\n                          \r\n\r\n\r\n                        </div>\r\n                        {\r\n                          restoreSuccess ? <>\r\n                            <div className='mt-2'>\r\n\r\n                            <Alert  severity=\"success\">Data restored successfully</Alert>\r\n                              </div>\r\n                            </> : null\r\n                          }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\n\nimport { useAuth } from \"./hooks/user-auth\";\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoutes({ children, ...rest }) {\n  const auth = useAuth();\n\n  if (auth.loadingUser) {\n    return <p>Loading</p>;\n  }\n\n  return (\n    <>\n      {auth.user && !auth.loadingUser ? (\n        <>\n          <Outlet />{\" \"}\n        </>\n      ) : (\n        <Navigate to=\"/admin/login\" />\n      )}\n    </>\n  );\n}\n\nexport default PrivateRoutes;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Route, Routes, Navigate } from \"react-router-dom\";\n\nimport AddCategory from \"../Screens/AddCategory\";\nimport AddPost from \"../Screens/AddPost\";\nimport AddSubCategory from \"../Screens/AddSubCategory\";\nimport AllPost from \"../Screens/AllPost\";\nimport Dashboard from \"../Screens/Dashboard\";\nimport LoginScreen from \"../Screens/LoginScreen\";\nimport UpdateScreen from \"../Screens/UpdateScreen\";\n\nimport AddRss from \"../Screens/AddRss\";\nimport AddUserScreen from \"../Screens/AddUserScreen\";\nimport AllRssScreen from \"../Screens/AllRssScreen\";\nimport AllUsersScreen from \"../Screens/AllUsersScreen\";\nimport AllCategoryScreen from \"../Screens/AllCategoryScreen\";\n// import PrivateRoutes from \"../PrivateRoutes\";\nimport AllMedia from \"../Screens/AllMedia\";\nimport UpdateUserScreen from \"../Screens/UpdateUserScreen\";\nimport UpdateRssScreen from \"../Screens/UpdateRssScreen\";\nimport UpdateCategoryScreen from \"../Screens/UpdateCategoryScreen\";\nimport UpdateSubCategoryScreen from \"../Screens/UpdateSubCategoryScreen\";\nimport AllSubCategoryScreen from \"../Screens/AllSubCategoryScreen\";\nimport AllPostScreenForAuthor from \"../Screens/AllPostScreenForAuthor\";\nimport ErrorPage from '../Screens/ErrorPage';\nimport BackupAndRestore from \"../Screens/BackupAndRestore\";\nimport { ProvideAuth, useAuth } from \"../hooks/user-auth\";\nimport PrivateRoutes from \"../PrivateRoutes\";\n\n// /all/sub_category\n\nfunction Main() {\n  \n  const auth = useAuth();\n\n\n\n  console.log(    console.log(auth?.user));\nconst [user, setUser]= useState(\"\")\n  const userExpiry = localStorage.getItem(\"userInfoExpiry\");\n  useEffect(() => {\n    setUser(localStorage.getItem(\"userInfo\"))\n    if (user) {\n      if (userExpiry) {\n        if (JSON.parse(userExpiry).time < Date.now()) {\n          localStorage.removeItem(\"userInfo\");\n          localStorage.removeItem(\"userInfoExpiry\");\n        }\n      }\n    }\n  }, [user, userExpiry]);\n\n  return (\n    <>\n         <ProvideAuth>\n\n  \n      <Routes>\n          <Route element={<PrivateRoutes />}>\n          <>\n          <Route path=\"/admin/dashboard\" element={<Dashboard />} />\n          <Route path=\"/admin/database/backup\" element={<BackupAndRestore />} />\n\n          <Route path=\"/admin/addpost\" element={<AddPost />} />\n\n          <Route path=\"/admin/all_media\" element={<AllMedia />} />\n          <Route path=\"/admin/addcategory\" element={<AddCategory />} />\n          <Route path=\"/admin/addrss\" element={<AddRss />} />\n          <Route path=\"/admin/posts\" element={<AllPost />} />\n          <Route\n            path=\"/admin/update_category/:id\"\n            element={<UpdateCategoryScreen />}\n          />\n          <Route path=\"/admin/updateposts/:id\" element={<UpdateScreen />} />\n\n          <Route\n            path=\"/admin/update_users/:id\"\n            element={<UpdateUserScreen />}\n          />\n\n          <Route path=\"/admin/updaterss/:id\" element={<UpdateRssScreen />} />\n\n          <Route path=\"/admin/sub_category\" element={<AddSubCategory />} />\n          <Route path=\"/admin/add_user\" element={<AddUserScreen />} />\n          <Route path=\"/admin/all_rss\" element={<AllRssScreen />} />\n\n          <Route\n            path=\"/admin/all/sub_category\"\n            element={<AllSubCategoryScreen />}\n          />\n\n          <Route path=\"/admin/all_users\" element={<AllUsersScreen />} />\n          <Route\n            path=\"/admin/update_subcategory/:id\"\n            element={<UpdateSubCategoryScreen />}\n          />\n          <Route path=\"/admin/all_category\" element={<AllCategoryScreen />} />\n          <Route\n            path=\"/admin/author_alll_posts\"\n            element={<AllPostScreenForAuthor />}\n          />\n          {/* <Route\n            path=\"*\"\n            element={<ErrorPage />}\n          /> */}\n                 <Route element={<Navigate to={'/admin/dashboard'} />} path={'*'} exact />\n            </>\n            \n      </Route>\n\n        <Route path=\"/admin/login\" element={<LoginScreen />} />\n\n   \n\n       \n\n        {/* </Route> */}\n\n        {/* <Route\n          path=\"*\"\n          element={<Navigate to={user ? '/admin/dashboard' : '/admin'} />}\n        /> */}\n          \n        </Routes>\n        </ProvideAuth>\n    </>\n  );\n}\n\nexport default Main;\n","import './App.css';\n\nimport Main from './All/Main';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport jwt_decode from 'jwt-decode'\nfunction App() {\n\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { categoryListReducer } from \"./reducers/categoryreducers\";\nimport { postListReducer } from \"./reducers/postReducer\";\nimport { subCategoryListReducer } from \"./reducers/subCategoryReducer\";\nimport { allUserReducer,  userSigninReducer } from \"./reducers/userReducers\";\nimport {  rssListReducer } from \"./reducers/rssReducers\"\nconst initialState = {};\nconst reducer = combineReducers({\ncategoryList:categoryListReducer,\npostList: postListReducer,\nsubCategoryList:subCategoryListReducer,\nuserSignin: userSigninReducer,\nrssList:rssListReducer ,\nallUsers:allUserReducer ,\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;\n","import {\n  CATEGORY_LIST_FAIL,\n  CATEGORY_LIST_REQUEST,\n  CATEGORY_LIST_SUCCESS,\n} from \"../constants/categoryConstants\";\n\nexport const categoryListReducer = (\n  state = { loading: true, categories: [] },\n  action\n) => {\n  switch (action.type) {\n    case CATEGORY_LIST_REQUEST:\n      return { loading: true };\n    case CATEGORY_LIST_SUCCESS:\n      return {\n        loading: false,\n        categories: action.payload,\n      };\n    case CATEGORY_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import {\n  POST_LIST_FAIL,\n  POST_LIST_REQUEST,\n  POST_LIST_SUCCESS,\n} from \"../constants/postConstants\";\n\nexport const postListReducer = (\n  state = { loading: true, posts: [] },\n  action\n) => {\n  switch (action.type) {\n    case POST_LIST_REQUEST:\n      return { loading: true };\n    case POST_LIST_SUCCESS:\n      return {\n        loading: false,\n        posts: action.payload,\n      };\n    case POST_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import { SUB_CATEGORY_LIST_FAIL, SUB_CATEGORY_LIST_REQUEST, SUB_CATEGORY_LIST_SUCCESS } from \"../constants/subCategorConstants\";\n\n\nexport const subCategoryListReducer = (\n  state = { loading: true, subCategories: [] },\n  action\n) => {\n  switch (action.type) {\n    case SUB_CATEGORY_LIST_REQUEST:\n      return { loading: true };\n    case SUB_CATEGORY_LIST_SUCCESS:\n      return {\n        loading: false,\n        subCategories: action.payload,\n      };\n    case SUB_CATEGORY_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import { ALL_USER_FAIL, ALL_USER_REQUEST, ALL_USER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS,} from \"../constants/UserConstants\";\n\n\nexport const userSigninReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_SIGNIN_REQUEST:\n      return { loading: true };\n    case USER_SIGNIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_SIGNIN_FAIL\n    :\n      return { loading: false, error: action.payload };\n    // case USER_SIGNOUT:\n    //   return {};\n    default:\n      return state;\n  }\n};\n\nexport const allUserReducer = \n( state = { loading: true, users: [] },\n  action\n) => {\n  switch (action.type) {\n    case ALL_USER_REQUEST:\n      return { loading: true };\n    case ALL_USER_SUCCESS:\n      return {\n        loading: false,\n        users: action.payload,\n      };\n    case ALL_USER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import { RSS_LIST_FAIL, RSS_LIST_REQUEST, RSS_LIST_SUCCESS, SINGLE_RSS_LIST_FAIL, SINGLE_RSS_LIST_REQUEST, SINGLE_RSS_LIST_SUCCESS } from \"../constants/rssConstants\";\n\n\nexport const rssListReducer = (\n  state = { loading: true, rss: [] },\n  action\n) => {\n  switch (action.type) {\n    case RSS_LIST_REQUEST:\n      return { loading: true };\n    case RSS_LIST_SUCCESS:\n      return {\n        loading: false,\n        rss: action.payload,\n      };\n    case RSS_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\n\nexport const singleRssReducer = (\n  state = { loading: true, rssData: [] },\n  action\n) => {\n  switch (action.type) {\n    case SINGLE_RSS_LIST_REQUEST:\n      return { loading: true };\n    case SINGLE_RSS_LIST_SUCCESS:\n      return {\n        loading: false,\n        rssData: action.payload,\n      };\n    case SINGLE_RSS_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n\n\n <BrowserRouter>\n <Provider store={store}>\n    <App />\n    </Provider>\n    </BrowserRouter>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}